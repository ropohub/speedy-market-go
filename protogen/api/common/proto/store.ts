// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/store.proto" (package "api.common.proto", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Address } from "./address";
/**
 * Represents a store entity with various attributes.
 *
 * @generated from protobuf message api.common.proto.Store
 */
export interface Store {
    /**
     * The primary key of the store.
     *
     * @generated from protobuf field: api.common.proto.Store.PrimaryKey primary_key = 1
     */
    primaryKey?: Store_PrimaryKey;
    /**
     * The website URL of the store.
     *
     * @generated from protobuf field: string website_url = 2
     */
    websiteUrl: string;
    /**
     * A list of image URLs associated with the store.
     *
     * @generated from protobuf field: repeated string image_urls = 3
     */
    imageUrls: string[];
    /**
     * The name of the store.
     *
     * @generated from protobuf field: string name = 4
     */
    name: string;
    /**
     * A description of the store.
     *
     * @generated from protobuf field: string description = 5
     */
    description: string;
    /**
     * The address of the store.
     *
     * @generated from protobuf field: api.common.proto.Address address = 7
     */
    address?: Address;
    /**
     * @generated from protobuf field: int64 distance_in_meters = 8
     */
    distanceInMeters: bigint;
    /**
     * @generated from protobuf field: int64 time_in_millis = 9
     */
    timeInMillis: bigint;
}
/**
 * Represents the primary key of the store.
 *
 * @generated from protobuf message api.common.proto.Store.PrimaryKey
 */
export interface Store_PrimaryKey {
    /**
     * Unique identifier for the store.
     *
     * @generated from protobuf field: int64 store_id = 1
     */
    storeId: bigint;
}
// @generated message type with reflection information, may provide speed optimized methods
class Store$Type extends MessageType<Store> {
    constructor() {
        super("api.common.proto.Store", [
            { no: 1, name: "primary_key", kind: "message", T: () => Store_PrimaryKey },
            { no: 2, name: "website_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "image_urls", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "address", kind: "message", T: () => Address },
            { no: 8, name: "distance_in_meters", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "time_in_millis", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Store>): Store {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.websiteUrl = "";
        message.imageUrls = [];
        message.name = "";
        message.description = "";
        message.distanceInMeters = 0n;
        message.timeInMillis = 0n;
        if (value !== undefined)
            reflectionMergePartial<Store>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Store): Store {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.Store.PrimaryKey primary_key */ 1:
                    message.primaryKey = Store_PrimaryKey.internalBinaryRead(reader, reader.uint32(), options, message.primaryKey);
                    break;
                case /* string website_url */ 2:
                    message.websiteUrl = reader.string();
                    break;
                case /* repeated string image_urls */ 3:
                    message.imageUrls.push(reader.string());
                    break;
                case /* string name */ 4:
                    message.name = reader.string();
                    break;
                case /* string description */ 5:
                    message.description = reader.string();
                    break;
                case /* api.common.proto.Address address */ 7:
                    message.address = Address.internalBinaryRead(reader, reader.uint32(), options, message.address);
                    break;
                case /* int64 distance_in_meters */ 8:
                    message.distanceInMeters = reader.int64().toBigInt();
                    break;
                case /* int64 time_in_millis */ 9:
                    message.timeInMillis = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Store, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.Store.PrimaryKey primary_key = 1; */
        if (message.primaryKey)
            Store_PrimaryKey.internalBinaryWrite(message.primaryKey, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string website_url = 2; */
        if (message.websiteUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.websiteUrl);
        /* repeated string image_urls = 3; */
        for (let i = 0; i < message.imageUrls.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.imageUrls[i]);
        /* string name = 4; */
        if (message.name !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.name);
        /* string description = 5; */
        if (message.description !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.description);
        /* api.common.proto.Address address = 7; */
        if (message.address)
            Address.internalBinaryWrite(message.address, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* int64 distance_in_meters = 8; */
        if (message.distanceInMeters !== 0n)
            writer.tag(8, WireType.Varint).int64(message.distanceInMeters);
        /* int64 time_in_millis = 9; */
        if (message.timeInMillis !== 0n)
            writer.tag(9, WireType.Varint).int64(message.timeInMillis);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.Store
 */
export const Store = new Store$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Store_PrimaryKey$Type extends MessageType<Store_PrimaryKey> {
    constructor() {
        super("api.common.proto.Store.PrimaryKey", [
            { no: 1, name: "store_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Store_PrimaryKey>): Store_PrimaryKey {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.storeId = 0n;
        if (value !== undefined)
            reflectionMergePartial<Store_PrimaryKey>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Store_PrimaryKey): Store_PrimaryKey {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 store_id */ 1:
                    message.storeId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Store_PrimaryKey, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 store_id = 1; */
        if (message.storeId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.storeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.Store.PrimaryKey
 */
export const Store_PrimaryKey = new Store_PrimaryKey$Type();
