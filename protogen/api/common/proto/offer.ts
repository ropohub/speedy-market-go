// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/offer.proto" (package "api.common.proto", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Represents an offer with various types and attributes.
 *
 * @generated from protobuf message api.common.proto.Offer
 */
export interface Offer {
    /**
     * The primary key of the offer.
     *
     * @generated from protobuf field: api.common.proto.Offer.PrimaryKey primary_key = 1
     */
    primaryKey?: Offer_PrimaryKey;
    /**
     * Description of the offer.
     *
     * @generated from protobuf field: string description = 2
     */
    description: string;
    /**
     * Indicates if the offer is active.
     *
     * @generated from protobuf field: bool is_active = 3
     */
    isActive: boolean;
    /**
     * One of the different types of offers.
     *
     * @generated from protobuf oneof: offer
     */
    offer: {
        oneofKind: "multiBuyOffer";
        /**
         * Multi-buy offer details.
         *
         * @generated from protobuf field: api.common.proto.MultiBuyOffer multi_buy_offer = 4
         */
        multiBuyOffer: MultiBuyOffer;
    } | {
        oneofKind: "flatDiscountOffer";
        /**
         * Flat discount offer details.
         *
         * @generated from protobuf field: api.common.proto.FlatDiscountOffer flat_discount_offer = 5
         */
        flatDiscountOffer: FlatDiscountOffer;
    } | {
        oneofKind: "percentageOffer";
        /**
         * Percentage discount offer details.
         *
         * @generated from protobuf field: api.common.proto.PercentageOffer percentage_offer = 6
         */
        percentageOffer: PercentageOffer;
    } | {
        oneofKind: "fixedPriceOffer";
        /**
         * Fixed price offer details.
         *
         * @generated from protobuf field: api.common.proto.FixedPriceOffer fixed_price_offer = 7
         */
        fixedPriceOffer: FixedPriceOffer;
    } | {
        oneofKind: undefined;
    };
    /**
     * Priority of the offer.
     *
     * @generated from protobuf field: int64 priority = 8
     */
    priority: bigint;
    /**
     * Start date of the offer.
     *
     * @generated from protobuf field: string start_date = 9
     */
    startDate: string;
    /**
     * End date of the offer.
     *
     * @generated from protobuf field: string end_date = 10
     */
    endDate: string;
}
/**
 * Represents the primary key of the offer.
 *
 * @generated from protobuf message api.common.proto.Offer.PrimaryKey
 */
export interface Offer_PrimaryKey {
    /**
     * Unique identifier for the offer.
     *
     * @generated from protobuf field: string offer_id = 1
     */
    offerId: string;
}
/**
 * Represents a multi-buy offer.
 *
 * @generated from protobuf message api.common.proto.MultiBuyOffer
 */
export interface MultiBuyOffer {
    /**
     * Minimum number of items required to avail the offer.
     *
     * @generated from protobuf field: int64 min_items = 1
     */
    minItems: bigint;
    /**
     * Number of free items given in the offer.
     *
     * @generated from protobuf field: int64 free_items = 2
     */
    freeItems: bigint;
}
/**
 * Represents a flat discount offer.
 *
 * @generated from protobuf message api.common.proto.FlatDiscountOffer
 */
export interface FlatDiscountOffer {
    /**
     * Minimum number of items required to avail the offer.
     *
     * @generated from protobuf field: int64 min_items = 1
     */
    minItems: bigint;
    /**
     * Discount amount in micros.
     *
     * @generated from protobuf field: double discount_amount_micros = 2
     */
    discountAmountMicros: number;
}
/**
 * Represents a percentage discount offer.
 *
 * @generated from protobuf message api.common.proto.PercentageOffer
 */
export interface PercentageOffer {
    /**
     * Minimum number of items required to avail the offer.
     *
     * @generated from protobuf field: int64 min_items = 1
     */
    minItems: bigint;
    /**
     * Discount percentage.
     *
     * @generated from protobuf field: double discount_percentage = 2
     */
    discountPercentage: number;
}
/**
 * Represents a fixed price offer.
 *
 * @generated from protobuf message api.common.proto.FixedPriceOffer
 */
export interface FixedPriceOffer {
    /**
     * Minimum number of items required to avail the offer.
     *
     * @generated from protobuf field: int64 min_items = 1
     */
    minItems: bigint;
    /**
     * Fixed discounted price in micros.
     *
     * @generated from protobuf field: double fixed_discounted_price_micros = 2
     */
    fixedDiscountedPriceMicros: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class Offer$Type extends MessageType<Offer> {
    constructor() {
        super("api.common.proto.Offer", [
            { no: 1, name: "primary_key", kind: "message", T: () => Offer_PrimaryKey },
            { no: 2, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_active", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "multi_buy_offer", kind: "message", oneof: "offer", T: () => MultiBuyOffer },
            { no: 5, name: "flat_discount_offer", kind: "message", oneof: "offer", T: () => FlatDiscountOffer },
            { no: 6, name: "percentage_offer", kind: "message", oneof: "offer", T: () => PercentageOffer },
            { no: 7, name: "fixed_price_offer", kind: "message", oneof: "offer", T: () => FixedPriceOffer },
            { no: 8, name: "priority", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "start_date", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "end_date", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Offer>): Offer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.description = "";
        message.isActive = false;
        message.offer = { oneofKind: undefined };
        message.priority = 0n;
        message.startDate = "";
        message.endDate = "";
        if (value !== undefined)
            reflectionMergePartial<Offer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Offer): Offer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.Offer.PrimaryKey primary_key */ 1:
                    message.primaryKey = Offer_PrimaryKey.internalBinaryRead(reader, reader.uint32(), options, message.primaryKey);
                    break;
                case /* string description */ 2:
                    message.description = reader.string();
                    break;
                case /* bool is_active */ 3:
                    message.isActive = reader.bool();
                    break;
                case /* api.common.proto.MultiBuyOffer multi_buy_offer */ 4:
                    message.offer = {
                        oneofKind: "multiBuyOffer",
                        multiBuyOffer: MultiBuyOffer.internalBinaryRead(reader, reader.uint32(), options, (message.offer as any).multiBuyOffer)
                    };
                    break;
                case /* api.common.proto.FlatDiscountOffer flat_discount_offer */ 5:
                    message.offer = {
                        oneofKind: "flatDiscountOffer",
                        flatDiscountOffer: FlatDiscountOffer.internalBinaryRead(reader, reader.uint32(), options, (message.offer as any).flatDiscountOffer)
                    };
                    break;
                case /* api.common.proto.PercentageOffer percentage_offer */ 6:
                    message.offer = {
                        oneofKind: "percentageOffer",
                        percentageOffer: PercentageOffer.internalBinaryRead(reader, reader.uint32(), options, (message.offer as any).percentageOffer)
                    };
                    break;
                case /* api.common.proto.FixedPriceOffer fixed_price_offer */ 7:
                    message.offer = {
                        oneofKind: "fixedPriceOffer",
                        fixedPriceOffer: FixedPriceOffer.internalBinaryRead(reader, reader.uint32(), options, (message.offer as any).fixedPriceOffer)
                    };
                    break;
                case /* int64 priority */ 8:
                    message.priority = reader.int64().toBigInt();
                    break;
                case /* string start_date */ 9:
                    message.startDate = reader.string();
                    break;
                case /* string end_date */ 10:
                    message.endDate = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Offer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.Offer.PrimaryKey primary_key = 1; */
        if (message.primaryKey)
            Offer_PrimaryKey.internalBinaryWrite(message.primaryKey, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string description = 2; */
        if (message.description !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.description);
        /* bool is_active = 3; */
        if (message.isActive !== false)
            writer.tag(3, WireType.Varint).bool(message.isActive);
        /* api.common.proto.MultiBuyOffer multi_buy_offer = 4; */
        if (message.offer.oneofKind === "multiBuyOffer")
            MultiBuyOffer.internalBinaryWrite(message.offer.multiBuyOffer, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.FlatDiscountOffer flat_discount_offer = 5; */
        if (message.offer.oneofKind === "flatDiscountOffer")
            FlatDiscountOffer.internalBinaryWrite(message.offer.flatDiscountOffer, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.PercentageOffer percentage_offer = 6; */
        if (message.offer.oneofKind === "percentageOffer")
            PercentageOffer.internalBinaryWrite(message.offer.percentageOffer, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.FixedPriceOffer fixed_price_offer = 7; */
        if (message.offer.oneofKind === "fixedPriceOffer")
            FixedPriceOffer.internalBinaryWrite(message.offer.fixedPriceOffer, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* int64 priority = 8; */
        if (message.priority !== 0n)
            writer.tag(8, WireType.Varint).int64(message.priority);
        /* string start_date = 9; */
        if (message.startDate !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.startDate);
        /* string end_date = 10; */
        if (message.endDate !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.endDate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.Offer
 */
export const Offer = new Offer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Offer_PrimaryKey$Type extends MessageType<Offer_PrimaryKey> {
    constructor() {
        super("api.common.proto.Offer.PrimaryKey", [
            { no: 1, name: "offer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Offer_PrimaryKey>): Offer_PrimaryKey {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.offerId = "";
        if (value !== undefined)
            reflectionMergePartial<Offer_PrimaryKey>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Offer_PrimaryKey): Offer_PrimaryKey {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string offer_id */ 1:
                    message.offerId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Offer_PrimaryKey, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string offer_id = 1; */
        if (message.offerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.offerId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.Offer.PrimaryKey
 */
export const Offer_PrimaryKey = new Offer_PrimaryKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MultiBuyOffer$Type extends MessageType<MultiBuyOffer> {
    constructor() {
        super("api.common.proto.MultiBuyOffer", [
            { no: 1, name: "min_items", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "free_items", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<MultiBuyOffer>): MultiBuyOffer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.minItems = 0n;
        message.freeItems = 0n;
        if (value !== undefined)
            reflectionMergePartial<MultiBuyOffer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MultiBuyOffer): MultiBuyOffer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 min_items */ 1:
                    message.minItems = reader.int64().toBigInt();
                    break;
                case /* int64 free_items */ 2:
                    message.freeItems = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MultiBuyOffer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 min_items = 1; */
        if (message.minItems !== 0n)
            writer.tag(1, WireType.Varint).int64(message.minItems);
        /* int64 free_items = 2; */
        if (message.freeItems !== 0n)
            writer.tag(2, WireType.Varint).int64(message.freeItems);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.MultiBuyOffer
 */
export const MultiBuyOffer = new MultiBuyOffer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FlatDiscountOffer$Type extends MessageType<FlatDiscountOffer> {
    constructor() {
        super("api.common.proto.FlatDiscountOffer", [
            { no: 1, name: "min_items", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "discount_amount_micros", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value?: PartialMessage<FlatDiscountOffer>): FlatDiscountOffer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.minItems = 0n;
        message.discountAmountMicros = 0;
        if (value !== undefined)
            reflectionMergePartial<FlatDiscountOffer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FlatDiscountOffer): FlatDiscountOffer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 min_items */ 1:
                    message.minItems = reader.int64().toBigInt();
                    break;
                case /* double discount_amount_micros */ 2:
                    message.discountAmountMicros = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FlatDiscountOffer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 min_items = 1; */
        if (message.minItems !== 0n)
            writer.tag(1, WireType.Varint).int64(message.minItems);
        /* double discount_amount_micros = 2; */
        if (message.discountAmountMicros !== 0)
            writer.tag(2, WireType.Bit64).double(message.discountAmountMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.FlatDiscountOffer
 */
export const FlatDiscountOffer = new FlatDiscountOffer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PercentageOffer$Type extends MessageType<PercentageOffer> {
    constructor() {
        super("api.common.proto.PercentageOffer", [
            { no: 1, name: "min_items", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "discount_percentage", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value?: PartialMessage<PercentageOffer>): PercentageOffer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.minItems = 0n;
        message.discountPercentage = 0;
        if (value !== undefined)
            reflectionMergePartial<PercentageOffer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PercentageOffer): PercentageOffer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 min_items */ 1:
                    message.minItems = reader.int64().toBigInt();
                    break;
                case /* double discount_percentage */ 2:
                    message.discountPercentage = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PercentageOffer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 min_items = 1; */
        if (message.minItems !== 0n)
            writer.tag(1, WireType.Varint).int64(message.minItems);
        /* double discount_percentage = 2; */
        if (message.discountPercentage !== 0)
            writer.tag(2, WireType.Bit64).double(message.discountPercentage);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.PercentageOffer
 */
export const PercentageOffer = new PercentageOffer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FixedPriceOffer$Type extends MessageType<FixedPriceOffer> {
    constructor() {
        super("api.common.proto.FixedPriceOffer", [
            { no: 1, name: "min_items", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "fixed_discounted_price_micros", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value?: PartialMessage<FixedPriceOffer>): FixedPriceOffer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.minItems = 0n;
        message.fixedDiscountedPriceMicros = 0;
        if (value !== undefined)
            reflectionMergePartial<FixedPriceOffer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FixedPriceOffer): FixedPriceOffer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 min_items */ 1:
                    message.minItems = reader.int64().toBigInt();
                    break;
                case /* double fixed_discounted_price_micros */ 2:
                    message.fixedDiscountedPriceMicros = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FixedPriceOffer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 min_items = 1; */
        if (message.minItems !== 0n)
            writer.tag(1, WireType.Varint).int64(message.minItems);
        /* double fixed_discounted_price_micros = 2; */
        if (message.fixedDiscountedPriceMicros !== 0)
            writer.tag(2, WireType.Bit64).double(message.fixedDiscountedPriceMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.FixedPriceOffer
 */
export const FixedPriceOffer = new FixedPriceOffer$Type();
