// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/offer.proto" (package "api.common.proto", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message api.common.proto.Offer
 */
export interface Offer {
    /**
     * @generated from protobuf oneof offer
     */
    offer: {
        oneofKind: "multiBuyOffer";
        /**
         * @generated from protobuf field: api.common.proto.MultiBuyOffer multi_buy_offer = 1;
         */
        multiBuyOffer: MultiBuyOffer;
    } | {
        oneofKind: "flatDiscountOffer";
        /**
         * @generated from protobuf field: api.common.proto.FlatDiscountOffer flat_discount_offer = 2;
         */
        flatDiscountOffer: FlatDiscountOffer;
    } | {
        oneofKind: "percentageOffer";
        /**
         * @generated from protobuf field: api.common.proto.PercentageOffer percentage_offer = 3;
         */
        percentageOffer: PercentageOffer;
    } | {
        oneofKind: "fixedPriceOffer";
        /**
         * @generated from protobuf field: api.common.proto.FixedPriceOffer fixed_price_offer = 4;
         */
        fixedPriceOffer: FixedPriceOffer;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message api.common.proto.MultiBuyOffer
 */
export interface MultiBuyOffer {
    /**
     * @generated from protobuf field: string description = 1;
     */
    description: string;
}
/**
 * @generated from protobuf message api.common.proto.FlatDiscountOffer
 */
export interface FlatDiscountOffer {
    /**
     * @generated from protobuf field: string description = 1;
     */
    description: string;
}
/**
 * @generated from protobuf message api.common.proto.PercentageOffer
 */
export interface PercentageOffer {
    /**
     * @generated from protobuf field: string description = 1;
     */
    description: string;
}
/**
 * @generated from protobuf message api.common.proto.FixedPriceOffer
 */
export interface FixedPriceOffer {
    /**
     * @generated from protobuf field: string description = 1;
     */
    description: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Offer$Type extends MessageType<Offer> {
    constructor() {
        super("api.common.proto.Offer", [
            { no: 1, name: "multi_buy_offer", kind: "message", oneof: "offer", T: () => MultiBuyOffer },
            { no: 2, name: "flat_discount_offer", kind: "message", oneof: "offer", T: () => FlatDiscountOffer },
            { no: 3, name: "percentage_offer", kind: "message", oneof: "offer", T: () => PercentageOffer },
            { no: 4, name: "fixed_price_offer", kind: "message", oneof: "offer", T: () => FixedPriceOffer }
        ]);
    }
    create(value?: PartialMessage<Offer>): Offer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.offer = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<Offer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Offer): Offer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.MultiBuyOffer multi_buy_offer */ 1:
                    message.offer = {
                        oneofKind: "multiBuyOffer",
                        multiBuyOffer: MultiBuyOffer.internalBinaryRead(reader, reader.uint32(), options, (message.offer?.oneofKind === "multiBuyOffer" ? message.offer.multiBuyOffer : undefined))
                    };
                    break;
                case /* api.common.proto.FlatDiscountOffer flat_discount_offer */ 2:
                    message.offer = {
                        oneofKind: "flatDiscountOffer",
                        flatDiscountOffer: FlatDiscountOffer.internalBinaryRead(reader, reader.uint32(), options, (message.offer?.oneofKind === "flatDiscountOffer" ? message.offer.flatDiscountOffer : undefined))
                    };
                    break;
                case /* api.common.proto.PercentageOffer percentage_offer */ 3:
                    message.offer = {
                        oneofKind: "percentageOffer",
                        percentageOffer: PercentageOffer.internalBinaryRead(reader, reader.uint32(), options, (message.offer?.oneofKind === "percentageOffer" ? message.offer.percentageOffer : undefined))
                    };
                    break;
                case /* api.common.proto.FixedPriceOffer fixed_price_offer */ 4:
                    message.offer = {
                        oneofKind: "fixedPriceOffer",
                        fixedPriceOffer: FixedPriceOffer.internalBinaryRead(reader, reader.uint32(), options, (message.offer?.oneofKind === "fixedPriceOffer" ? message.offer.fixedPriceOffer : undefined))
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Offer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.MultiBuyOffer multi_buy_offer = 1; */
        if (message.offer.oneofKind === "multiBuyOffer")
            MultiBuyOffer.internalBinaryWrite(message.offer.multiBuyOffer, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.FlatDiscountOffer flat_discount_offer = 2; */
        if (message.offer.oneofKind === "flatDiscountOffer")
            FlatDiscountOffer.internalBinaryWrite(message.offer.flatDiscountOffer, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.PercentageOffer percentage_offer = 3; */
        if (message.offer.oneofKind === "percentageOffer")
            PercentageOffer.internalBinaryWrite(message.offer.percentageOffer, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.FixedPriceOffer fixed_price_offer = 4; */
        if (message.offer.oneofKind === "fixedPriceOffer")
            FixedPriceOffer.internalBinaryWrite(message.offer.fixedPriceOffer, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.Offer
 */
export const Offer = new Offer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MultiBuyOffer$Type extends MessageType<MultiBuyOffer> {
    constructor() {
        super("api.common.proto.MultiBuyOffer", [
            { no: 1, name: "description", kind: "scalar", T: 9 /* STRING */ }
        ]);
    }
    create(value?: PartialMessage<MultiBuyOffer>): MultiBuyOffer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<MultiBuyOffer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MultiBuyOffer): MultiBuyOffer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string description */ 1:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MultiBuyOffer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string description = 1; */
        if (message.description !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.MultiBuyOffer
 */
export const MultiBuyOffer = new MultiBuyOffer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FlatDiscountOffer$Type extends MessageType<FlatDiscountOffer> {
    constructor() {
        super("api.common.proto.FlatDiscountOffer", [
            { no: 1, name: "description", kind: "scalar", T: 9 /* STRING */ }
        ]);
    }
    create(value?: PartialMessage<FlatDiscountOffer>): FlatDiscountOffer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<FlatDiscountOffer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FlatDiscountOffer): FlatDiscountOffer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string description */ 1:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FlatDiscountOffer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string description = 1; */
        if (message.description !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.FlatDiscountOffer
 */
export const FlatDiscountOffer = new FlatDiscountOffer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PercentageOffer$Type extends MessageType<PercentageOffer> {
    constructor() {
        super("api.common.proto.PercentageOffer", [
            { no: 1, name: "description", kind: "scalar", T: 9 /* STRING */ }
        ]);
    }
    create(value?: PartialMessage<PercentageOffer>): PercentageOffer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<PercentageOffer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PercentageOffer): PercentageOffer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string description */ 1:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PercentageOffer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string description = 1; */
        if (message.description !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.PercentageOffer
 */
export const PercentageOffer = new PercentageOffer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FixedPriceOffer$Type extends MessageType<FixedPriceOffer> {
    constructor() {
        super("api.common.proto.FixedPriceOffer", [
            { no: 1, name: "description", kind: "scalar", T: 9 /* STRING */ }
        ]);
    }
    create(value?: PartialMessage<FixedPriceOffer>): FixedPriceOffer {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.description = "";
        if (value !== undefined)
            reflectionMergePartial<FixedPriceOffer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FixedPriceOffer): FixedPriceOffer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string description */ 1:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FixedPriceOffer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string description = 1; */
        if (message.description !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.FixedPriceOffer
 */
export const FixedPriceOffer = new FixedPriceOffer$Type();

