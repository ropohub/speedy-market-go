// source: api/common/proto/offer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.exportSymbol('proto.api.common.proto.FixedPriceOffer', null, global);
goog.exportSymbol('proto.api.common.proto.FlatDiscountOffer', null, global);
goog.exportSymbol('proto.api.common.proto.MultiBuyOffer', null, global);
goog.exportSymbol('proto.api.common.proto.Offer', null, global);
goog.exportSymbol('proto.api.common.proto.Offer.OfferCase', null, global);
goog.exportSymbol('proto.api.common.proto.Offer.PrimaryKey', null, global);
goog.exportSymbol('proto.api.common.proto.PercentageOffer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.Offer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.common.proto.Offer.oneofGroups_);
};
goog.inherits(proto.api.common.proto.Offer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.Offer.displayName = 'proto.api.common.proto.Offer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.Offer.PrimaryKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.Offer.PrimaryKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.Offer.PrimaryKey.displayName = 'proto.api.common.proto.Offer.PrimaryKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.MultiBuyOffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.MultiBuyOffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.MultiBuyOffer.displayName = 'proto.api.common.proto.MultiBuyOffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.FlatDiscountOffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.FlatDiscountOffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.FlatDiscountOffer.displayName = 'proto.api.common.proto.FlatDiscountOffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.PercentageOffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.PercentageOffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.PercentageOffer.displayName = 'proto.api.common.proto.PercentageOffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.FixedPriceOffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.FixedPriceOffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.FixedPriceOffer.displayName = 'proto.api.common.proto.FixedPriceOffer';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.common.proto.Offer.oneofGroups_ = [[4,5,6,7]];

/**
 * @enum {number}
 */
proto.api.common.proto.Offer.OfferCase = {
  OFFER_NOT_SET: 0,
  MULTI_BUY_OFFER: 4,
  FLAT_DISCOUNT_OFFER: 5,
  PERCENTAGE_OFFER: 6,
  FIXED_PRICE_OFFER: 7
};

/**
 * @return {proto.api.common.proto.Offer.OfferCase}
 */
proto.api.common.proto.Offer.prototype.getOfferCase = function() {
  return /** @type {proto.api.common.proto.Offer.OfferCase} */(jspb.Message.computeOneofCase(this, proto.api.common.proto.Offer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.Offer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.Offer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.Offer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Offer.toObject = function(includeInstance, msg) {
  var f, obj = {
primaryKey: (f = msg.getPrimaryKey()) && proto.api.common.proto.Offer.PrimaryKey.toObject(includeInstance, f),
description: jspb.Message.getFieldWithDefault(msg, 2, ""),
isActive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
multiBuyOffer: (f = msg.getMultiBuyOffer()) && proto.api.common.proto.MultiBuyOffer.toObject(includeInstance, f),
flatDiscountOffer: (f = msg.getFlatDiscountOffer()) && proto.api.common.proto.FlatDiscountOffer.toObject(includeInstance, f),
percentageOffer: (f = msg.getPercentageOffer()) && proto.api.common.proto.PercentageOffer.toObject(includeInstance, f),
fixedPriceOffer: (f = msg.getFixedPriceOffer()) && proto.api.common.proto.FixedPriceOffer.toObject(includeInstance, f),
priority: jspb.Message.getFieldWithDefault(msg, 8, 0),
startDate: jspb.Message.getFieldWithDefault(msg, 9, ""),
endDate: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.Offer}
 */
proto.api.common.proto.Offer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.Offer;
  return proto.api.common.proto.Offer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.Offer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.Offer}
 */
proto.api.common.proto.Offer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.common.proto.Offer.PrimaryKey;
      reader.readMessage(value,proto.api.common.proto.Offer.PrimaryKey.deserializeBinaryFromReader);
      msg.setPrimaryKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 4:
      var value = new proto.api.common.proto.MultiBuyOffer;
      reader.readMessage(value,proto.api.common.proto.MultiBuyOffer.deserializeBinaryFromReader);
      msg.setMultiBuyOffer(value);
      break;
    case 5:
      var value = new proto.api.common.proto.FlatDiscountOffer;
      reader.readMessage(value,proto.api.common.proto.FlatDiscountOffer.deserializeBinaryFromReader);
      msg.setFlatDiscountOffer(value);
      break;
    case 6:
      var value = new proto.api.common.proto.PercentageOffer;
      reader.readMessage(value,proto.api.common.proto.PercentageOffer.deserializeBinaryFromReader);
      msg.setPercentageOffer(value);
      break;
    case 7:
      var value = new proto.api.common.proto.FixedPriceOffer;
      reader.readMessage(value,proto.api.common.proto.FixedPriceOffer.deserializeBinaryFromReader);
      msg.setFixedPriceOffer(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPriority(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.Offer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.Offer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.Offer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Offer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimaryKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.common.proto.Offer.PrimaryKey.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMultiBuyOffer();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.common.proto.MultiBuyOffer.serializeBinaryToWriter
    );
  }
  f = message.getFlatDiscountOffer();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.common.proto.FlatDiscountOffer.serializeBinaryToWriter
    );
  }
  f = message.getPercentageOffer();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.common.proto.PercentageOffer.serializeBinaryToWriter
    );
  }
  f = message.getFixedPriceOffer();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api.common.proto.FixedPriceOffer.serializeBinaryToWriter
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.Offer.PrimaryKey.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.Offer.PrimaryKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.Offer.PrimaryKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Offer.PrimaryKey.toObject = function(includeInstance, msg) {
  var f, obj = {
offerId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.Offer.PrimaryKey}
 */
proto.api.common.proto.Offer.PrimaryKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.Offer.PrimaryKey;
  return proto.api.common.proto.Offer.PrimaryKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.Offer.PrimaryKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.Offer.PrimaryKey}
 */
proto.api.common.proto.Offer.PrimaryKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.Offer.PrimaryKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.Offer.PrimaryKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.Offer.PrimaryKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Offer.PrimaryKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string offer_id = 1;
 * @return {string}
 */
proto.api.common.proto.Offer.PrimaryKey.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.Offer.PrimaryKey} returns this
 */
proto.api.common.proto.Offer.PrimaryKey.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PrimaryKey primary_key = 1;
 * @return {?proto.api.common.proto.Offer.PrimaryKey}
 */
proto.api.common.proto.Offer.prototype.getPrimaryKey = function() {
  return /** @type{?proto.api.common.proto.Offer.PrimaryKey} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.Offer.PrimaryKey, 1));
};


/**
 * @param {?proto.api.common.proto.Offer.PrimaryKey|undefined} value
 * @return {!proto.api.common.proto.Offer} returns this
*/
proto.api.common.proto.Offer.prototype.setPrimaryKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.clearPrimaryKey = function() {
  return this.setPrimaryKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Offer.prototype.hasPrimaryKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.api.common.proto.Offer.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_active = 3;
 * @return {boolean}
 */
proto.api.common.proto.Offer.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional MultiBuyOffer multi_buy_offer = 4;
 * @return {?proto.api.common.proto.MultiBuyOffer}
 */
proto.api.common.proto.Offer.prototype.getMultiBuyOffer = function() {
  return /** @type{?proto.api.common.proto.MultiBuyOffer} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.MultiBuyOffer, 4));
};


/**
 * @param {?proto.api.common.proto.MultiBuyOffer|undefined} value
 * @return {!proto.api.common.proto.Offer} returns this
*/
proto.api.common.proto.Offer.prototype.setMultiBuyOffer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api.common.proto.Offer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.clearMultiBuyOffer = function() {
  return this.setMultiBuyOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Offer.prototype.hasMultiBuyOffer = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FlatDiscountOffer flat_discount_offer = 5;
 * @return {?proto.api.common.proto.FlatDiscountOffer}
 */
proto.api.common.proto.Offer.prototype.getFlatDiscountOffer = function() {
  return /** @type{?proto.api.common.proto.FlatDiscountOffer} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.FlatDiscountOffer, 5));
};


/**
 * @param {?proto.api.common.proto.FlatDiscountOffer|undefined} value
 * @return {!proto.api.common.proto.Offer} returns this
*/
proto.api.common.proto.Offer.prototype.setFlatDiscountOffer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api.common.proto.Offer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.clearFlatDiscountOffer = function() {
  return this.setFlatDiscountOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Offer.prototype.hasFlatDiscountOffer = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PercentageOffer percentage_offer = 6;
 * @return {?proto.api.common.proto.PercentageOffer}
 */
proto.api.common.proto.Offer.prototype.getPercentageOffer = function() {
  return /** @type{?proto.api.common.proto.PercentageOffer} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.PercentageOffer, 6));
};


/**
 * @param {?proto.api.common.proto.PercentageOffer|undefined} value
 * @return {!proto.api.common.proto.Offer} returns this
*/
proto.api.common.proto.Offer.prototype.setPercentageOffer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api.common.proto.Offer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.clearPercentageOffer = function() {
  return this.setPercentageOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Offer.prototype.hasPercentageOffer = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional FixedPriceOffer fixed_price_offer = 7;
 * @return {?proto.api.common.proto.FixedPriceOffer}
 */
proto.api.common.proto.Offer.prototype.getFixedPriceOffer = function() {
  return /** @type{?proto.api.common.proto.FixedPriceOffer} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.FixedPriceOffer, 7));
};


/**
 * @param {?proto.api.common.proto.FixedPriceOffer|undefined} value
 * @return {!proto.api.common.proto.Offer} returns this
*/
proto.api.common.proto.Offer.prototype.setFixedPriceOffer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api.common.proto.Offer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.clearFixedPriceOffer = function() {
  return this.setFixedPriceOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Offer.prototype.hasFixedPriceOffer = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 priority = 8;
 * @return {number}
 */
proto.api.common.proto.Offer.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string start_date = 9;
 * @return {string}
 */
proto.api.common.proto.Offer.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string end_date = 10;
 * @return {string}
 */
proto.api.common.proto.Offer.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.Offer} returns this
 */
proto.api.common.proto.Offer.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.MultiBuyOffer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.MultiBuyOffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.MultiBuyOffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.MultiBuyOffer.toObject = function(includeInstance, msg) {
  var f, obj = {
minItems: jspb.Message.getFieldWithDefault(msg, 1, 0),
freeItems: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.MultiBuyOffer}
 */
proto.api.common.proto.MultiBuyOffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.MultiBuyOffer;
  return proto.api.common.proto.MultiBuyOffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.MultiBuyOffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.MultiBuyOffer}
 */
proto.api.common.proto.MultiBuyOffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinItems(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFreeItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.MultiBuyOffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.MultiBuyOffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.MultiBuyOffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.MultiBuyOffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinItems();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getFreeItems();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 min_items = 1;
 * @return {number}
 */
proto.api.common.proto.MultiBuyOffer.prototype.getMinItems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.MultiBuyOffer} returns this
 */
proto.api.common.proto.MultiBuyOffer.prototype.setMinItems = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 free_items = 2;
 * @return {number}
 */
proto.api.common.proto.MultiBuyOffer.prototype.getFreeItems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.MultiBuyOffer} returns this
 */
proto.api.common.proto.MultiBuyOffer.prototype.setFreeItems = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.FlatDiscountOffer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.FlatDiscountOffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.FlatDiscountOffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.FlatDiscountOffer.toObject = function(includeInstance, msg) {
  var f, obj = {
minItems: jspb.Message.getFieldWithDefault(msg, 1, 0),
discountAmountMicros: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.FlatDiscountOffer}
 */
proto.api.common.proto.FlatDiscountOffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.FlatDiscountOffer;
  return proto.api.common.proto.FlatDiscountOffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.FlatDiscountOffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.FlatDiscountOffer}
 */
proto.api.common.proto.FlatDiscountOffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinItems(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountAmountMicros(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.FlatDiscountOffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.FlatDiscountOffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.FlatDiscountOffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.FlatDiscountOffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinItems();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDiscountAmountMicros();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional int64 min_items = 1;
 * @return {number}
 */
proto.api.common.proto.FlatDiscountOffer.prototype.getMinItems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.FlatDiscountOffer} returns this
 */
proto.api.common.proto.FlatDiscountOffer.prototype.setMinItems = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double discount_amount_micros = 2;
 * @return {number}
 */
proto.api.common.proto.FlatDiscountOffer.prototype.getDiscountAmountMicros = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.FlatDiscountOffer} returns this
 */
proto.api.common.proto.FlatDiscountOffer.prototype.setDiscountAmountMicros = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.PercentageOffer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.PercentageOffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.PercentageOffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.PercentageOffer.toObject = function(includeInstance, msg) {
  var f, obj = {
minItems: jspb.Message.getFieldWithDefault(msg, 1, 0),
discountPercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.PercentageOffer}
 */
proto.api.common.proto.PercentageOffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.PercentageOffer;
  return proto.api.common.proto.PercentageOffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.PercentageOffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.PercentageOffer}
 */
proto.api.common.proto.PercentageOffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinItems(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscountPercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.PercentageOffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.PercentageOffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.PercentageOffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.PercentageOffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinItems();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDiscountPercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional int64 min_items = 1;
 * @return {number}
 */
proto.api.common.proto.PercentageOffer.prototype.getMinItems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.PercentageOffer} returns this
 */
proto.api.common.proto.PercentageOffer.prototype.setMinItems = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double discount_percentage = 2;
 * @return {number}
 */
proto.api.common.proto.PercentageOffer.prototype.getDiscountPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.PercentageOffer} returns this
 */
proto.api.common.proto.PercentageOffer.prototype.setDiscountPercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.FixedPriceOffer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.FixedPriceOffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.FixedPriceOffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.FixedPriceOffer.toObject = function(includeInstance, msg) {
  var f, obj = {
minItems: jspb.Message.getFieldWithDefault(msg, 1, 0),
fixedDiscountedPriceMicros: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.FixedPriceOffer}
 */
proto.api.common.proto.FixedPriceOffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.FixedPriceOffer;
  return proto.api.common.proto.FixedPriceOffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.FixedPriceOffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.FixedPriceOffer}
 */
proto.api.common.proto.FixedPriceOffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinItems(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFixedDiscountedPriceMicros(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.FixedPriceOffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.FixedPriceOffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.FixedPriceOffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.FixedPriceOffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinItems();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getFixedDiscountedPriceMicros();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional int64 min_items = 1;
 * @return {number}
 */
proto.api.common.proto.FixedPriceOffer.prototype.getMinItems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.FixedPriceOffer} returns this
 */
proto.api.common.proto.FixedPriceOffer.prototype.setMinItems = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double fixed_discounted_price_micros = 2;
 * @return {number}
 */
proto.api.common.proto.FixedPriceOffer.prototype.getFixedDiscountedPriceMicros = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.FixedPriceOffer} returns this
 */
proto.api.common.proto.FixedPriceOffer.prototype.setFixedDiscountedPriceMicros = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


