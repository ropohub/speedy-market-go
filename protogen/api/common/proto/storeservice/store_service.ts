// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/storeservice/store_service.proto" (package "api.common.proto.storeservice", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Filter } from "../filter";
import { Product_PrimaryKey } from "../product";
import { Store } from "../store";
import { ResponseHeader } from "../header";
import { RequestHeader } from "../header";
/**
 * GetStoreRequest is the request message for retrieving stores.
 *
 * @generated from protobuf message api.common.proto.storeservice.GetStoreRequest
 */
export interface GetStoreRequest {
    /**
     * Request header containing metadata.
     *
     * @generated from protobuf field: api.common.proto.RequestHeader header = 1
     */
    header?: RequestHeader;
    /**
     * List of store selectors to filter the results.
     *
     * @generated from protobuf field: repeated api.common.proto.storeservice.StoreSelector selectors = 2
     */
    selectors: StoreSelector[];
    /**
     * Order by criteria for sorting the results.
     *
     * @generated from protobuf field: repeated api.common.proto.storeservice.GetStoreRequest.OrderBy order_by = 3
     */
    orderBy: GetStoreRequest_OrderBy[];
}
/**
 * OrderBy specifies the field and order for sorting the results.
 *
 * @generated from protobuf message api.common.proto.storeservice.GetStoreRequest.OrderBy
 */
export interface GetStoreRequest_OrderBy {
    /**
     * Enum field to sort by.
     *
     * @generated from protobuf field: api.common.proto.storeservice.Field.Enum field = 1
     */
    field: Field_Enum;
    /**
     * Whether to sort in descending order.
     *
     * @generated from protobuf field: bool descending = 2
     */
    descending: boolean;
}
/**
 * GetStoreResponse is the response message containing the list of stores.
 *
 * @generated from protobuf message api.common.proto.storeservice.GetStoreResponse
 */
export interface GetStoreResponse {
    /**
     * Response header containing metadata.
     *
     * @generated from protobuf field: api.common.proto.ResponseHeader header = 1
     */
    header?: ResponseHeader;
    /**
     * List of stores matching the request.
     *
     * @generated from protobuf field: repeated api.common.proto.Store stores = 2
     */
    stores: Store[];
}
/**
 * GetStorePriceForProductRequest is the request message for retrieving store
 * prices for a product.
 *
 * @generated from protobuf message api.common.proto.storeservice.GetStorePriceForProductRequest
 */
export interface GetStorePriceForProductRequest {
    /**
     * Request header containing metadata.
     *
     * @generated from protobuf field: api.common.proto.RequestHeader header = 1
     */
    header?: RequestHeader;
    /**
     * Primary key of the product.
     *
     * @generated from protobuf field: api.common.proto.Product.PrimaryKey product_key = 2
     */
    productKey?: Product_PrimaryKey;
}
/**
 * GetStorePriceForProductResponse is the response message containing store
 * prices for a product.
 *
 * @generated from protobuf message api.common.proto.storeservice.GetStorePriceForProductResponse
 */
export interface GetStorePriceForProductResponse {
    /**
     * Response header containing metadata.
     *
     * @generated from protobuf field: api.common.proto.ResponseHeader header = 1
     */
    header?: ResponseHeader;
    /**
     * List of store prices for the product.
     *
     * @generated from protobuf field: repeated api.common.proto.storeservice.GetStorePriceForProductResponse.StorePrice store_prices = 2
     */
    storePrices: GetStorePriceForProductResponse_StorePrice[];
}
/**
 * StorePrice contains the store and its discounted price for the product.
 *
 * @generated from protobuf message api.common.proto.storeservice.GetStorePriceForProductResponse.StorePrice
 */
export interface GetStorePriceForProductResponse_StorePrice {
    /**
     * Store information.
     *
     * @generated from protobuf field: api.common.proto.Store store = 1
     */
    store?: Store;
    /**
     * Discounted price in micros.
     *
     * @generated from protobuf field: int64 discounted_price_micros = 2
     */
    discountedPriceMicros: bigint;
}
/**
 * StoreSelector is used to filter stores based on specific fields and filters.
 *
 * @generated from protobuf message api.common.proto.storeservice.StoreSelector
 */
export interface StoreSelector {
    /**
     * Enum field to filter by.
     *
     * @generated from protobuf field: api.common.proto.storeservice.Field.Enum field = 1
     */
    field: Field_Enum;
    /**
     * Filters to apply on the field.
     *
     * @generated from protobuf field: api.common.proto.Filter filter = 2
     */
    filter?: Filter;
}
/**
 * Field defines the enum for various fields that can be used for sorting and
 * filtering.
 *
 * @generated from protobuf message api.common.proto.storeservice.Field
 */
export interface Field {
}
/**
 * @generated from protobuf enum api.common.proto.storeservice.Field.Enum
 */
export enum Field_Enum {
    /**
     * Unknown field.
     *
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * Store key field.
     *
     * @generated from protobuf enum value: STORE_KEY = 1;
     */
    STORE_KEY = 1,
    /**
     * Brand key field.
     *
     * @generated from protobuf enum value: BRAND_KEY = 2;
     */
    BRAND_KEY = 2,
    /**
     * Product key field.
     *
     * @generated from protobuf enum value: PRODUCT_KEY = 3;
     */
    PRODUCT_KEY = 3,
    /**
     * Gender field.
     *
     * @generated from protobuf enum value: GENDER = 4;
     */
    GENDER = 4,
    /**
     * Category field.
     *
     * @generated from protobuf enum value: CATEGORY = 5;
     */
    CATEGORY = 5,
    /**
     * Rating field.
     *
     * @generated from protobuf enum value: RATING = 6;
     */
    RATING = 6,
    /**
     * Discount percentage field.
     *
     * @generated from protobuf enum value: DISCOUNT_PERCENTAGE = 7;
     */
    DISCOUNT_PERCENTAGE = 7,
    /**
     * Distance field.
     *
     * @generated from protobuf enum value: DISTANCE = 8;
     */
    DISTANCE = 8
}
// @generated message type with reflection information, may provide speed optimized methods
class GetStoreRequest$Type extends MessageType<GetStoreRequest> {
    constructor() {
        super("api.common.proto.storeservice.GetStoreRequest", [
            { no: 1, name: "header", kind: "message", T: () => RequestHeader },
            { no: 2, name: "selectors", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => StoreSelector },
            { no: 3, name: "order_by", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GetStoreRequest_OrderBy }
        ]);
    }
    create(value?: PartialMessage<GetStoreRequest>): GetStoreRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.selectors = [];
        message.orderBy = [];
        if (value !== undefined)
            reflectionMergePartial<GetStoreRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStoreRequest): GetStoreRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.RequestHeader header */ 1:
                    message.header = RequestHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* repeated api.common.proto.storeservice.StoreSelector selectors */ 2:
                    message.selectors.push(StoreSelector.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated api.common.proto.storeservice.GetStoreRequest.OrderBy order_by */ 3:
                    message.orderBy.push(GetStoreRequest_OrderBy.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetStoreRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.RequestHeader header = 1; */
        if (message.header)
            RequestHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated api.common.proto.storeservice.StoreSelector selectors = 2; */
        for (let i = 0; i < message.selectors.length; i++)
            StoreSelector.internalBinaryWrite(message.selectors[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated api.common.proto.storeservice.GetStoreRequest.OrderBy order_by = 3; */
        for (let i = 0; i < message.orderBy.length; i++)
            GetStoreRequest_OrderBy.internalBinaryWrite(message.orderBy[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.storeservice.GetStoreRequest
 */
export const GetStoreRequest = new GetStoreRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStoreRequest_OrderBy$Type extends MessageType<GetStoreRequest_OrderBy> {
    constructor() {
        super("api.common.proto.storeservice.GetStoreRequest.OrderBy", [
            { no: 1, name: "field", kind: "enum", T: () => ["api.common.proto.storeservice.Field.Enum", Field_Enum] },
            { no: 2, name: "descending", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetStoreRequest_OrderBy>): GetStoreRequest_OrderBy {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.field = 0;
        message.descending = false;
        if (value !== undefined)
            reflectionMergePartial<GetStoreRequest_OrderBy>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStoreRequest_OrderBy): GetStoreRequest_OrderBy {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.storeservice.Field.Enum field */ 1:
                    message.field = reader.int32();
                    break;
                case /* bool descending */ 2:
                    message.descending = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetStoreRequest_OrderBy, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.storeservice.Field.Enum field = 1; */
        if (message.field !== 0)
            writer.tag(1, WireType.Varint).int32(message.field);
        /* bool descending = 2; */
        if (message.descending !== false)
            writer.tag(2, WireType.Varint).bool(message.descending);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.storeservice.GetStoreRequest.OrderBy
 */
export const GetStoreRequest_OrderBy = new GetStoreRequest_OrderBy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStoreResponse$Type extends MessageType<GetStoreResponse> {
    constructor() {
        super("api.common.proto.storeservice.GetStoreResponse", [
            { no: 1, name: "header", kind: "message", T: () => ResponseHeader },
            { no: 2, name: "stores", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => Store }
        ]);
    }
    create(value?: PartialMessage<GetStoreResponse>): GetStoreResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.stores = [];
        if (value !== undefined)
            reflectionMergePartial<GetStoreResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStoreResponse): GetStoreResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.ResponseHeader header */ 1:
                    message.header = ResponseHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* repeated api.common.proto.Store stores */ 2:
                    message.stores.push(Store.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetStoreResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.ResponseHeader header = 1; */
        if (message.header)
            ResponseHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated api.common.proto.Store stores = 2; */
        for (let i = 0; i < message.stores.length; i++)
            Store.internalBinaryWrite(message.stores[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.storeservice.GetStoreResponse
 */
export const GetStoreResponse = new GetStoreResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStorePriceForProductRequest$Type extends MessageType<GetStorePriceForProductRequest> {
    constructor() {
        super("api.common.proto.storeservice.GetStorePriceForProductRequest", [
            { no: 1, name: "header", kind: "message", T: () => RequestHeader },
            { no: 2, name: "product_key", kind: "message", T: () => Product_PrimaryKey }
        ]);
    }
    create(value?: PartialMessage<GetStorePriceForProductRequest>): GetStorePriceForProductRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetStorePriceForProductRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStorePriceForProductRequest): GetStorePriceForProductRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.RequestHeader header */ 1:
                    message.header = RequestHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* api.common.proto.Product.PrimaryKey product_key */ 2:
                    message.productKey = Product_PrimaryKey.internalBinaryRead(reader, reader.uint32(), options, message.productKey);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetStorePriceForProductRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.RequestHeader header = 1; */
        if (message.header)
            RequestHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.Product.PrimaryKey product_key = 2; */
        if (message.productKey)
            Product_PrimaryKey.internalBinaryWrite(message.productKey, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.storeservice.GetStorePriceForProductRequest
 */
export const GetStorePriceForProductRequest = new GetStorePriceForProductRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStorePriceForProductResponse$Type extends MessageType<GetStorePriceForProductResponse> {
    constructor() {
        super("api.common.proto.storeservice.GetStorePriceForProductResponse", [
            { no: 1, name: "header", kind: "message", T: () => ResponseHeader },
            { no: 2, name: "store_prices", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GetStorePriceForProductResponse_StorePrice }
        ]);
    }
    create(value?: PartialMessage<GetStorePriceForProductResponse>): GetStorePriceForProductResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.storePrices = [];
        if (value !== undefined)
            reflectionMergePartial<GetStorePriceForProductResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStorePriceForProductResponse): GetStorePriceForProductResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.ResponseHeader header */ 1:
                    message.header = ResponseHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* repeated api.common.proto.storeservice.GetStorePriceForProductResponse.StorePrice store_prices */ 2:
                    message.storePrices.push(GetStorePriceForProductResponse_StorePrice.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetStorePriceForProductResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.ResponseHeader header = 1; */
        if (message.header)
            ResponseHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated api.common.proto.storeservice.GetStorePriceForProductResponse.StorePrice store_prices = 2; */
        for (let i = 0; i < message.storePrices.length; i++)
            GetStorePriceForProductResponse_StorePrice.internalBinaryWrite(message.storePrices[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.storeservice.GetStorePriceForProductResponse
 */
export const GetStorePriceForProductResponse = new GetStorePriceForProductResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStorePriceForProductResponse_StorePrice$Type extends MessageType<GetStorePriceForProductResponse_StorePrice> {
    constructor() {
        super("api.common.proto.storeservice.GetStorePriceForProductResponse.StorePrice", [
            { no: 1, name: "store", kind: "message", T: () => Store },
            { no: 2, name: "discounted_price_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<GetStorePriceForProductResponse_StorePrice>): GetStorePriceForProductResponse_StorePrice {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.discountedPriceMicros = 0n;
        if (value !== undefined)
            reflectionMergePartial<GetStorePriceForProductResponse_StorePrice>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStorePriceForProductResponse_StorePrice): GetStorePriceForProductResponse_StorePrice {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.Store store */ 1:
                    message.store = Store.internalBinaryRead(reader, reader.uint32(), options, message.store);
                    break;
                case /* int64 discounted_price_micros */ 2:
                    message.discountedPriceMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetStorePriceForProductResponse_StorePrice, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.Store store = 1; */
        if (message.store)
            Store.internalBinaryWrite(message.store, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 discounted_price_micros = 2; */
        if (message.discountedPriceMicros !== 0n)
            writer.tag(2, WireType.Varint).int64(message.discountedPriceMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.storeservice.GetStorePriceForProductResponse.StorePrice
 */
export const GetStorePriceForProductResponse_StorePrice = new GetStorePriceForProductResponse_StorePrice$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StoreSelector$Type extends MessageType<StoreSelector> {
    constructor() {
        super("api.common.proto.storeservice.StoreSelector", [
            { no: 1, name: "field", kind: "enum", T: () => ["api.common.proto.storeservice.Field.Enum", Field_Enum] },
            { no: 2, name: "filter", kind: "message", T: () => Filter }
        ]);
    }
    create(value?: PartialMessage<StoreSelector>): StoreSelector {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.field = 0;
        if (value !== undefined)
            reflectionMergePartial<StoreSelector>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoreSelector): StoreSelector {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.storeservice.Field.Enum field */ 1:
                    message.field = reader.int32();
                    break;
                case /* api.common.proto.Filter filter */ 2:
                    message.filter = Filter.internalBinaryRead(reader, reader.uint32(), options, message.filter);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StoreSelector, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.storeservice.Field.Enum field = 1; */
        if (message.field !== 0)
            writer.tag(1, WireType.Varint).int32(message.field);
        /* api.common.proto.Filter filter = 2; */
        if (message.filter)
            Filter.internalBinaryWrite(message.filter, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.storeservice.StoreSelector
 */
export const StoreSelector = new StoreSelector$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Field$Type extends MessageType<Field> {
    constructor() {
        super("api.common.proto.storeservice.Field", []);
    }
    create(value?: PartialMessage<Field>): Field {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Field>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Field): Field {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Field, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.storeservice.Field
 */
export const Field = new Field$Type();
/**
 * @generated ServiceType for protobuf service api.common.proto.storeservice.StoreService
 */
export const StoreService = new ServiceType("api.common.proto.storeservice.StoreService", [
    { name: "GetStore", serverStreaming: true, options: {}, I: GetStoreRequest, O: GetStoreResponse },
    { name: "GetStorePriceForProduct", options: {}, I: GetStorePriceForProductRequest, O: GetStorePriceForProductResponse }
]);
