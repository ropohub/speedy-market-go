// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/storeservice/store_service.proto" (package "api.common.proto.storeservice", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { StoreService } from "./store_service";
import type { GetStorePriceForProductResponse } from "./store_service";
import type { GetStorePriceForProductRequest } from "./store_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetStoreResponse } from "./store_service";
import type { GetStoreRequest } from "./store_service";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * StoreService defines the service for store-related operations.
 *
 * @generated from protobuf service api.common.proto.storeservice.StoreService
 */
export interface IStoreServiceClient {
    /**
     * GetStore retrieves a stream of stores based on the provided request.
     *
     * @generated from protobuf rpc: GetStore
     */
    getStore(input: GetStoreRequest, options?: RpcOptions): ServerStreamingCall<GetStoreRequest, GetStoreResponse>;
    /**
     * GetStorePriceForProduct retrieves the price of a product in different
     * stores.
     *
     * @generated from protobuf rpc: GetStorePriceForProduct
     */
    getStorePriceForProduct(input: GetStorePriceForProductRequest, options?: RpcOptions): UnaryCall<GetStorePriceForProductRequest, GetStorePriceForProductResponse>;
}
/**
 * StoreService defines the service for store-related operations.
 *
 * @generated from protobuf service api.common.proto.storeservice.StoreService
 */
export class StoreServiceClient implements IStoreServiceClient, ServiceInfo {
    typeName = StoreService.typeName;
    methods = StoreService.methods;
    options = StoreService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * GetStore retrieves a stream of stores based on the provided request.
     *
     * @generated from protobuf rpc: GetStore
     */
    getStore(input: GetStoreRequest, options?: RpcOptions): ServerStreamingCall<GetStoreRequest, GetStoreResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetStoreRequest, GetStoreResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * GetStorePriceForProduct retrieves the price of a product in different
     * stores.
     *
     * @generated from protobuf rpc: GetStorePriceForProduct
     */
    getStorePriceForProduct(input: GetStorePriceForProductRequest, options?: RpcOptions): UnaryCall<GetStorePriceForProductRequest, GetStorePriceForProductResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetStorePriceForProductRequest, GetStorePriceForProductResponse>("unary", this._transport, method, opt, input);
    }
}
