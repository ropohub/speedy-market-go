// source: api/common/proto/customerservice/customer_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.exportSymbol('proto.api.common.proto.customerservice.AddCustomerAddressRequest', null, global);
goog.exportSymbol('proto.api.common.proto.customerservice.AddCustomerAddressResponse', null, global);
goog.exportSymbol('proto.api.common.proto.customerservice.GetCustomerRequest', null, global);
goog.exportSymbol('proto.api.common.proto.customerservice.GetCustomerResponse', null, global);
goog.exportSymbol('proto.api.common.proto.customerservice.OrderReciever', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.customerservice.GetCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.customerservice.GetCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.customerservice.GetCustomerRequest.displayName = 'proto.api.common.proto.customerservice.GetCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.customerservice.GetCustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.common.proto.customerservice.GetCustomerResponse.repeatedFields_, null);
};
goog.inherits(proto.api.common.proto.customerservice.GetCustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.customerservice.GetCustomerResponse.displayName = 'proto.api.common.proto.customerservice.GetCustomerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.customerservice.AddCustomerAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.customerservice.AddCustomerAddressRequest.displayName = 'proto.api.common.proto.customerservice.AddCustomerAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.customerservice.AddCustomerAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.customerservice.AddCustomerAddressResponse.displayName = 'proto.api.common.proto.customerservice.AddCustomerAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.customerservice.OrderReciever = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.customerservice.OrderReciever, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.customerservice.OrderReciever.displayName = 'proto.api.common.proto.customerservice.OrderReciever';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.customerservice.GetCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.customerservice.GetCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.customerservice.GetCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.GetCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
header: (f = msg.getHeader()) && proto.api.common.proto.RequestHeader.toObject(includeInstance, f),
phoneNumber: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.customerservice.GetCustomerRequest}
 */
proto.api.common.proto.customerservice.GetCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.customerservice.GetCustomerRequest;
  return proto.api.common.proto.customerservice.GetCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.customerservice.GetCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.customerservice.GetCustomerRequest}
 */
proto.api.common.proto.customerservice.GetCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.common.proto.RequestHeader;
      reader.readMessage(value,proto.api.common.proto.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.customerservice.GetCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.customerservice.GetCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.customerservice.GetCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.GetCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.common.proto.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.common.proto.RequestHeader header = 1;
 * @return {?proto.api.common.proto.RequestHeader}
 */
proto.api.common.proto.customerservice.GetCustomerRequest.prototype.getHeader = function() {
  return /** @type{?proto.api.common.proto.RequestHeader} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.RequestHeader, 1));
};


/**
 * @param {?proto.api.common.proto.RequestHeader|undefined} value
 * @return {!proto.api.common.proto.customerservice.GetCustomerRequest} returns this
*/
proto.api.common.proto.customerservice.GetCustomerRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.customerservice.GetCustomerRequest} returns this
 */
proto.api.common.proto.customerservice.GetCustomerRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.customerservice.GetCustomerRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string phone_number = 2;
 * @return {string}
 */
proto.api.common.proto.customerservice.GetCustomerRequest.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.customerservice.GetCustomerRequest} returns this
 */
proto.api.common.proto.customerservice.GetCustomerRequest.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.common.proto.customerservice.GetCustomerResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.customerservice.GetCustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.customerservice.GetCustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.GetCustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
header: (f = msg.getHeader()) && proto.api.common.proto.ResponseHeader.toObject(includeInstance, f),
orderRecieversList: jspb.Message.toObjectList(msg.getOrderRecieversList(),
    proto.api.common.proto.customerservice.OrderReciever.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.customerservice.GetCustomerResponse}
 */
proto.api.common.proto.customerservice.GetCustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.customerservice.GetCustomerResponse;
  return proto.api.common.proto.customerservice.GetCustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.customerservice.GetCustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.customerservice.GetCustomerResponse}
 */
proto.api.common.proto.customerservice.GetCustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.common.proto.ResponseHeader;
      reader.readMessage(value,proto.api.common.proto.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.api.common.proto.customerservice.OrderReciever;
      reader.readMessage(value,proto.api.common.proto.customerservice.OrderReciever.deserializeBinaryFromReader);
      msg.addOrderRecievers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.customerservice.GetCustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.customerservice.GetCustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.GetCustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.common.proto.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getOrderRecieversList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.common.proto.customerservice.OrderReciever.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.common.proto.ResponseHeader header = 1;
 * @return {?proto.api.common.proto.ResponseHeader}
 */
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.getHeader = function() {
  return /** @type{?proto.api.common.proto.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.ResponseHeader, 1));
};


/**
 * @param {?proto.api.common.proto.ResponseHeader|undefined} value
 * @return {!proto.api.common.proto.customerservice.GetCustomerResponse} returns this
*/
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.customerservice.GetCustomerResponse} returns this
 */
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated OrderReciever order_recievers = 2;
 * @return {!Array<!proto.api.common.proto.customerservice.OrderReciever>}
 */
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.getOrderRecieversList = function() {
  return /** @type{!Array<!proto.api.common.proto.customerservice.OrderReciever>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.common.proto.customerservice.OrderReciever, 2));
};


/**
 * @param {!Array<!proto.api.common.proto.customerservice.OrderReciever>} value
 * @return {!proto.api.common.proto.customerservice.GetCustomerResponse} returns this
*/
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.setOrderRecieversList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.common.proto.customerservice.OrderReciever=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.common.proto.customerservice.OrderReciever}
 */
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.addOrderRecievers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.common.proto.customerservice.OrderReciever, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.common.proto.customerservice.GetCustomerResponse} returns this
 */
proto.api.common.proto.customerservice.GetCustomerResponse.prototype.clearOrderRecieversList = function() {
  return this.setOrderRecieversList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.customerservice.AddCustomerAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.customerservice.AddCustomerAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
header: (f = msg.getHeader()) && proto.api.common.proto.RequestHeader.toObject(includeInstance, f),
orderReciever: (f = msg.getOrderReciever()) && proto.api.common.proto.customerservice.OrderReciever.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressRequest}
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.customerservice.AddCustomerAddressRequest;
  return proto.api.common.proto.customerservice.AddCustomerAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.customerservice.AddCustomerAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressRequest}
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.common.proto.RequestHeader;
      reader.readMessage(value,proto.api.common.proto.RequestHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.api.common.proto.customerservice.OrderReciever;
      reader.readMessage(value,proto.api.common.proto.customerservice.OrderReciever.deserializeBinaryFromReader);
      msg.setOrderReciever(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.customerservice.AddCustomerAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.customerservice.AddCustomerAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.common.proto.RequestHeader.serializeBinaryToWriter
    );
  }
  f = message.getOrderReciever();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.common.proto.customerservice.OrderReciever.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.common.proto.RequestHeader header = 1;
 * @return {?proto.api.common.proto.RequestHeader}
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.getHeader = function() {
  return /** @type{?proto.api.common.proto.RequestHeader} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.RequestHeader, 1));
};


/**
 * @param {?proto.api.common.proto.RequestHeader|undefined} value
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressRequest} returns this
*/
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressRequest} returns this
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OrderReciever order_reciever = 2;
 * @return {?proto.api.common.proto.customerservice.OrderReciever}
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.getOrderReciever = function() {
  return /** @type{?proto.api.common.proto.customerservice.OrderReciever} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.customerservice.OrderReciever, 2));
};


/**
 * @param {?proto.api.common.proto.customerservice.OrderReciever|undefined} value
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressRequest} returns this
*/
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.setOrderReciever = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressRequest} returns this
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.clearOrderReciever = function() {
  return this.setOrderReciever(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.customerservice.AddCustomerAddressRequest.prototype.hasOrderReciever = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.customerservice.AddCustomerAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.customerservice.AddCustomerAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
header: (f = msg.getHeader()) && proto.api.common.proto.ResponseHeader.toObject(includeInstance, f),
customerAddressLinkId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressResponse}
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.customerservice.AddCustomerAddressResponse;
  return proto.api.common.proto.customerservice.AddCustomerAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.customerservice.AddCustomerAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressResponse}
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.common.proto.ResponseHeader;
      reader.readMessage(value,proto.api.common.proto.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomerAddressLinkId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.customerservice.AddCustomerAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.customerservice.AddCustomerAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.common.proto.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getCustomerAddressLinkId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional api.common.proto.ResponseHeader header = 1;
 * @return {?proto.api.common.proto.ResponseHeader}
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.prototype.getHeader = function() {
  return /** @type{?proto.api.common.proto.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.ResponseHeader, 1));
};


/**
 * @param {?proto.api.common.proto.ResponseHeader|undefined} value
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressResponse} returns this
*/
proto.api.common.proto.customerservice.AddCustomerAddressResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressResponse} returns this
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 customer_address_link_id = 2;
 * @return {number}
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.prototype.getCustomerAddressLinkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.customerservice.AddCustomerAddressResponse} returns this
 */
proto.api.common.proto.customerservice.AddCustomerAddressResponse.prototype.setCustomerAddressLinkId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.customerservice.OrderReciever.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.customerservice.OrderReciever} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.OrderReciever.toObject = function(includeInstance, msg) {
  var f, obj = {
recieverAddress: (f = msg.getRecieverAddress()) && proto.api.common.proto.Address.toObject(includeInstance, f),
houseNumberAndFloor: jspb.Message.getFieldWithDefault(msg, 2, ""),
receiverName: jspb.Message.getFieldWithDefault(msg, 3, ""),
recieverPhoneNumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
customerAddressLinkId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.customerservice.OrderReciever}
 */
proto.api.common.proto.customerservice.OrderReciever.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.customerservice.OrderReciever;
  return proto.api.common.proto.customerservice.OrderReciever.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.customerservice.OrderReciever} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.customerservice.OrderReciever}
 */
proto.api.common.proto.customerservice.OrderReciever.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.common.proto.Address;
      reader.readMessage(value,proto.api.common.proto.Address.deserializeBinaryFromReader);
      msg.setRecieverAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseNumberAndFloor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiverName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecieverPhoneNumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomerAddressLinkId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.customerservice.OrderReciever.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.customerservice.OrderReciever} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.customerservice.OrderReciever.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecieverAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.common.proto.Address.serializeBinaryToWriter
    );
  }
  f = message.getHouseNumberAndFloor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReceiverName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecieverPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCustomerAddressLinkId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional api.common.proto.Address reciever_address = 1;
 * @return {?proto.api.common.proto.Address}
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.getRecieverAddress = function() {
  return /** @type{?proto.api.common.proto.Address} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.Address, 1));
};


/**
 * @param {?proto.api.common.proto.Address|undefined} value
 * @return {!proto.api.common.proto.customerservice.OrderReciever} returns this
*/
proto.api.common.proto.customerservice.OrderReciever.prototype.setRecieverAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.customerservice.OrderReciever} returns this
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.clearRecieverAddress = function() {
  return this.setRecieverAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.hasRecieverAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string house_number_and_floor = 2;
 * @return {string}
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.getHouseNumberAndFloor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.customerservice.OrderReciever} returns this
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.setHouseNumberAndFloor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string receiver_name = 3;
 * @return {string}
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.getReceiverName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.customerservice.OrderReciever} returns this
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.setReceiverName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string reciever_phone_number = 4;
 * @return {string}
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.getRecieverPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.customerservice.OrderReciever} returns this
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.setRecieverPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 customer_address_link_id = 5;
 * @return {number}
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.getCustomerAddressLinkId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.customerservice.OrderReciever} returns this
 */
proto.api.common.proto.customerservice.OrderReciever.prototype.setCustomerAddressLinkId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


