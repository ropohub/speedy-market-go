// source: api/common/proto/filter.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.exportSymbol('proto.api.common.proto.BoolList', null, global);
goog.exportSymbol('proto.api.common.proto.BytesList', null, global);
goog.exportSymbol('proto.api.common.proto.DoubleList', null, global);
goog.exportSymbol('proto.api.common.proto.Filter', null, global);
goog.exportSymbol('proto.api.common.proto.Filter.Operator', null, global);
goog.exportSymbol('proto.api.common.proto.FloatList', null, global);
goog.exportSymbol('proto.api.common.proto.Int64List', null, global);
goog.exportSymbol('proto.api.common.proto.StringList', null, global);
goog.exportSymbol('proto.api.common.proto.Uint64Values', null, global);
goog.exportSymbol('proto.api.common.proto.Value', null, global);
goog.exportSymbol('proto.api.common.proto.Value.ValueCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.common.proto.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.Filter.displayName = 'proto.api.common.proto.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.common.proto.Value.oneofGroups_);
};
goog.inherits(proto.api.common.proto.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.Value.displayName = 'proto.api.common.proto.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.BoolList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.common.proto.BoolList.repeatedFields_, null);
};
goog.inherits(proto.api.common.proto.BoolList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.BoolList.displayName = 'proto.api.common.proto.BoolList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.StringList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.common.proto.StringList.repeatedFields_, null);
};
goog.inherits(proto.api.common.proto.StringList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.StringList.displayName = 'proto.api.common.proto.StringList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.Int64List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.common.proto.Int64List.repeatedFields_, null);
};
goog.inherits(proto.api.common.proto.Int64List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.Int64List.displayName = 'proto.api.common.proto.Int64List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.Uint64Values = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.common.proto.Uint64Values.repeatedFields_, null);
};
goog.inherits(proto.api.common.proto.Uint64Values, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.Uint64Values.displayName = 'proto.api.common.proto.Uint64Values';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.FloatList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.common.proto.FloatList.repeatedFields_, null);
};
goog.inherits(proto.api.common.proto.FloatList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.FloatList.displayName = 'proto.api.common.proto.FloatList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.DoubleList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.common.proto.DoubleList.repeatedFields_, null);
};
goog.inherits(proto.api.common.proto.DoubleList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.DoubleList.displayName = 'proto.api.common.proto.DoubleList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.common.proto.BytesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.common.proto.BytesList.repeatedFields_, null);
};
goog.inherits(proto.api.common.proto.BytesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.common.proto.BytesList.displayName = 'proto.api.common.proto.BytesList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
operator: jspb.Message.getFieldWithDefault(msg, 1, 0),
value: (f = msg.getValue()) && proto.api.common.proto.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.Filter}
 */
proto.api.common.proto.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.Filter;
  return proto.api.common.proto.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.Filter}
 */
proto.api.common.proto.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.common.proto.Filter.Operator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 2:
      var value = new proto.api.common.proto.Value;
      reader.readMessage(value,proto.api.common.proto.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.common.proto.Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.api.common.proto.Filter.Operator = {
  UNKNOWN: 0,
  EQUALS: 1,
  NOT_EQUALS: 2,
  IN: 3,
  NOT_IN: 4,
  GREATHER_THAN: 5,
  GREATHER_THAN_OR_EQUALS: 6,
  LESS_THAN: 7,
  LESS_THAN_OR_EQUALS: 8,
  IS_NULL: 9,
  IS_NOT_NULL: 10,
  CONTAINS_ANY: 11,
  CONTAINS_ALL: 12,
  CONTAINS_NONE: 13,
  NOT_EMPTY: 14
};

/**
 * optional Operator operator = 1;
 * @return {!proto.api.common.proto.Filter.Operator}
 */
proto.api.common.proto.Filter.prototype.getOperator = function() {
  return /** @type {!proto.api.common.proto.Filter.Operator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.common.proto.Filter.Operator} value
 * @return {!proto.api.common.proto.Filter} returns this
 */
proto.api.common.proto.Filter.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Value value = 2;
 * @return {?proto.api.common.proto.Value}
 */
proto.api.common.proto.Filter.prototype.getValue = function() {
  return /** @type{?proto.api.common.proto.Value} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.Value, 2));
};


/**
 * @param {?proto.api.common.proto.Value|undefined} value
 * @return {!proto.api.common.proto.Filter} returns this
*/
proto.api.common.proto.Filter.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Filter} returns this
 */
proto.api.common.proto.Filter.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Filter.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.common.proto.Value.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14]];

/**
 * @enum {number}
 */
proto.api.common.proto.Value.ValueCase = {
  VALUE_NOT_SET: 0,
  BOOL_VALUE: 1,
  STRING_VALUE: 2,
  INT64_VALUE: 3,
  UINT64_VALUE: 4,
  FLOAT_VALUE: 5,
  DOUBLE_VALUE: 6,
  BYTES_VALUE: 7,
  BOOL_LIST: 8,
  STRING_LIST: 9,
  INT64_LIST: 10,
  UINT64_LIST: 11,
  FLOAT_LIST: 12,
  DOUBLE_LIST: 13,
  BYTES_LIST: 14
};

/**
 * @return {proto.api.common.proto.Value.ValueCase}
 */
proto.api.common.proto.Value.prototype.getValueCase = function() {
  return /** @type {proto.api.common.proto.Value.ValueCase} */(jspb.Message.computeOneofCase(this, proto.api.common.proto.Value.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
boolValue: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
stringValue: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
int64Value: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
uint64Value: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
floatValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
doubleValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
bytesValue: msg.getBytesValue_asB64(),
boolList: (f = msg.getBoolList()) && proto.api.common.proto.BoolList.toObject(includeInstance, f),
stringList: (f = msg.getStringList()) && proto.api.common.proto.StringList.toObject(includeInstance, f),
int64List: (f = msg.getInt64List()) && proto.api.common.proto.Int64List.toObject(includeInstance, f),
uint64List: (f = msg.getUint64List()) && proto.api.common.proto.Uint64Values.toObject(includeInstance, f),
floatList: (f = msg.getFloatList()) && proto.api.common.proto.FloatList.toObject(includeInstance, f),
doubleList: (f = msg.getDoubleList()) && proto.api.common.proto.DoubleList.toObject(includeInstance, f),
bytesList: (f = msg.getBytesList()) && proto.api.common.proto.BytesList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.Value}
 */
proto.api.common.proto.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.Value;
  return proto.api.common.proto.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.Value}
 */
proto.api.common.proto.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInt64Value(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUint64Value(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloatValue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytesValue(value);
      break;
    case 8:
      var value = new proto.api.common.proto.BoolList;
      reader.readMessage(value,proto.api.common.proto.BoolList.deserializeBinaryFromReader);
      msg.setBoolList(value);
      break;
    case 9:
      var value = new proto.api.common.proto.StringList;
      reader.readMessage(value,proto.api.common.proto.StringList.deserializeBinaryFromReader);
      msg.setStringList(value);
      break;
    case 10:
      var value = new proto.api.common.proto.Int64List;
      reader.readMessage(value,proto.api.common.proto.Int64List.deserializeBinaryFromReader);
      msg.setInt64List(value);
      break;
    case 11:
      var value = new proto.api.common.proto.Uint64Values;
      reader.readMessage(value,proto.api.common.proto.Uint64Values.deserializeBinaryFromReader);
      msg.setUint64List(value);
      break;
    case 12:
      var value = new proto.api.common.proto.FloatList;
      reader.readMessage(value,proto.api.common.proto.FloatList.deserializeBinaryFromReader);
      msg.setFloatList(value);
      break;
    case 13:
      var value = new proto.api.common.proto.DoubleList;
      reader.readMessage(value,proto.api.common.proto.DoubleList.deserializeBinaryFromReader);
      msg.setDoubleList(value);
      break;
    case 14:
      var value = new proto.api.common.proto.BytesList;
      reader.readMessage(value,proto.api.common.proto.BytesList.deserializeBinaryFromReader);
      msg.setBytesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getBoolList();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.api.common.proto.BoolList.serializeBinaryToWriter
    );
  }
  f = message.getStringList();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.api.common.proto.StringList.serializeBinaryToWriter
    );
  }
  f = message.getInt64List();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.api.common.proto.Int64List.serializeBinaryToWriter
    );
  }
  f = message.getUint64List();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.api.common.proto.Uint64Values.serializeBinaryToWriter
    );
  }
  f = message.getFloatList();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.api.common.proto.FloatList.serializeBinaryToWriter
    );
  }
  f = message.getDoubleList();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.api.common.proto.DoubleList.serializeBinaryToWriter
    );
  }
  f = message.getBytesList();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.api.common.proto.BytesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool bool_value = 1;
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 1, proto.api.common.proto.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string string_value = 2;
 * @return {string}
 */
proto.api.common.proto.Value.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.api.common.proto.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 int64_value = 3;
 * @return {number}
 */
proto.api.common.proto.Value.prototype.getInt64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.setInt64Value = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearInt64Value = function() {
  return jspb.Message.setOneofField(this, 3, proto.api.common.proto.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasInt64Value = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 uint64_value = 4;
 * @return {number}
 */
proto.api.common.proto.Value.prototype.getUint64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.setUint64Value = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearUint64Value = function() {
  return jspb.Message.setOneofField(this, 4, proto.api.common.proto.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasUint64Value = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float float_value = 5;
 * @return {number}
 */
proto.api.common.proto.Value.prototype.getFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearFloatValue = function() {
  return jspb.Message.setOneofField(this, 5, proto.api.common.proto.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double double_value = 6;
 * @return {number}
 */
proto.api.common.proto.Value.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 6, proto.api.common.proto.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes bytes_value = 7;
 * @return {!(string|Uint8Array)}
 */
proto.api.common.proto.Value.prototype.getBytesValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes bytes_value = 7;
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {string}
 */
proto.api.common.proto.Value.prototype.getBytesValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytesValue()));
};


/**
 * optional bytes bytes_value = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {!Uint8Array}
 */
proto.api.common.proto.Value.prototype.getBytesValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytesValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.setBytesValue = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearBytesValue = function() {
  return jspb.Message.setOneofField(this, 7, proto.api.common.proto.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasBytesValue = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional BoolList bool_list = 8;
 * @return {?proto.api.common.proto.BoolList}
 */
proto.api.common.proto.Value.prototype.getBoolList = function() {
  return /** @type{?proto.api.common.proto.BoolList} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.BoolList, 8));
};


/**
 * @param {?proto.api.common.proto.BoolList|undefined} value
 * @return {!proto.api.common.proto.Value} returns this
*/
proto.api.common.proto.Value.prototype.setBoolList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearBoolList = function() {
  return this.setBoolList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasBoolList = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional StringList string_list = 9;
 * @return {?proto.api.common.proto.StringList}
 */
proto.api.common.proto.Value.prototype.getStringList = function() {
  return /** @type{?proto.api.common.proto.StringList} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.StringList, 9));
};


/**
 * @param {?proto.api.common.proto.StringList|undefined} value
 * @return {!proto.api.common.proto.Value} returns this
*/
proto.api.common.proto.Value.prototype.setStringList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearStringList = function() {
  return this.setStringList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasStringList = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Int64List int64_list = 10;
 * @return {?proto.api.common.proto.Int64List}
 */
proto.api.common.proto.Value.prototype.getInt64List = function() {
  return /** @type{?proto.api.common.proto.Int64List} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.Int64List, 10));
};


/**
 * @param {?proto.api.common.proto.Int64List|undefined} value
 * @return {!proto.api.common.proto.Value} returns this
*/
proto.api.common.proto.Value.prototype.setInt64List = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearInt64List = function() {
  return this.setInt64List(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasInt64List = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Uint64Values uint64_list = 11;
 * @return {?proto.api.common.proto.Uint64Values}
 */
proto.api.common.proto.Value.prototype.getUint64List = function() {
  return /** @type{?proto.api.common.proto.Uint64Values} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.Uint64Values, 11));
};


/**
 * @param {?proto.api.common.proto.Uint64Values|undefined} value
 * @return {!proto.api.common.proto.Value} returns this
*/
proto.api.common.proto.Value.prototype.setUint64List = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearUint64List = function() {
  return this.setUint64List(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasUint64List = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional FloatList float_list = 12;
 * @return {?proto.api.common.proto.FloatList}
 */
proto.api.common.proto.Value.prototype.getFloatList = function() {
  return /** @type{?proto.api.common.proto.FloatList} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.FloatList, 12));
};


/**
 * @param {?proto.api.common.proto.FloatList|undefined} value
 * @return {!proto.api.common.proto.Value} returns this
*/
proto.api.common.proto.Value.prototype.setFloatList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearFloatList = function() {
  return this.setFloatList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasFloatList = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional DoubleList double_list = 13;
 * @return {?proto.api.common.proto.DoubleList}
 */
proto.api.common.proto.Value.prototype.getDoubleList = function() {
  return /** @type{?proto.api.common.proto.DoubleList} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.DoubleList, 13));
};


/**
 * @param {?proto.api.common.proto.DoubleList|undefined} value
 * @return {!proto.api.common.proto.Value} returns this
*/
proto.api.common.proto.Value.prototype.setDoubleList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearDoubleList = function() {
  return this.setDoubleList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasDoubleList = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional BytesList bytes_list = 14;
 * @return {?proto.api.common.proto.BytesList}
 */
proto.api.common.proto.Value.prototype.getBytesList = function() {
  return /** @type{?proto.api.common.proto.BytesList} */ (
    jspb.Message.getWrapperField(this, proto.api.common.proto.BytesList, 14));
};


/**
 * @param {?proto.api.common.proto.BytesList|undefined} value
 * @return {!proto.api.common.proto.Value} returns this
*/
proto.api.common.proto.Value.prototype.setBytesList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.api.common.proto.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.common.proto.Value} returns this
 */
proto.api.common.proto.Value.prototype.clearBytesList = function() {
  return this.setBytesList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.common.proto.Value.prototype.hasBytesList = function() {
  return jspb.Message.getField(this, 14) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.common.proto.BoolList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.BoolList.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.BoolList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.BoolList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.BoolList.toObject = function(includeInstance, msg) {
  var f, obj = {
boolValuesList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.BoolList}
 */
proto.api.common.proto.BoolList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.BoolList;
  return proto.api.common.proto.BoolList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.BoolList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.BoolList}
 */
proto.api.common.proto.BoolList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBoolValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.BoolList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.BoolList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.BoolList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.BoolList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoolValuesList();
  if (f.length > 0) {
    writer.writePackedBool(
      1,
      f
    );
  }
};


/**
 * repeated bool bool_values = 1;
 * @return {!Array<boolean>}
 */
proto.api.common.proto.BoolList.prototype.getBoolValuesList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.api.common.proto.BoolList} returns this
 */
proto.api.common.proto.BoolList.prototype.setBoolValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.api.common.proto.BoolList} returns this
 */
proto.api.common.proto.BoolList.prototype.addBoolValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.common.proto.BoolList} returns this
 */
proto.api.common.proto.BoolList.prototype.clearBoolValuesList = function() {
  return this.setBoolValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.common.proto.StringList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.StringList.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.StringList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.StringList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.StringList.toObject = function(includeInstance, msg) {
  var f, obj = {
stringValuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.StringList}
 */
proto.api.common.proto.StringList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.StringList;
  return proto.api.common.proto.StringList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.StringList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.StringList}
 */
proto.api.common.proto.StringList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addStringValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.StringList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.StringList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.StringList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.StringList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStringValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string string_values = 1;
 * @return {!Array<string>}
 */
proto.api.common.proto.StringList.prototype.getStringValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.common.proto.StringList} returns this
 */
proto.api.common.proto.StringList.prototype.setStringValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.common.proto.StringList} returns this
 */
proto.api.common.proto.StringList.prototype.addStringValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.common.proto.StringList} returns this
 */
proto.api.common.proto.StringList.prototype.clearStringValuesList = function() {
  return this.setStringValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.common.proto.Int64List.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.Int64List.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.Int64List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.Int64List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Int64List.toObject = function(includeInstance, msg) {
  var f, obj = {
int64ValuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.Int64List}
 */
proto.api.common.proto.Int64List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.Int64List;
  return proto.api.common.proto.Int64List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.Int64List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.Int64List}
 */
proto.api.common.proto.Int64List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addInt64Values(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.Int64List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.Int64List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.Int64List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Int64List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInt64ValuesList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 int64_values = 1;
 * @return {!Array<number>}
 */
proto.api.common.proto.Int64List.prototype.getInt64ValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.common.proto.Int64List} returns this
 */
proto.api.common.proto.Int64List.prototype.setInt64ValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.common.proto.Int64List} returns this
 */
proto.api.common.proto.Int64List.prototype.addInt64Values = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.common.proto.Int64List} returns this
 */
proto.api.common.proto.Int64List.prototype.clearInt64ValuesList = function() {
  return this.setInt64ValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.common.proto.Uint64Values.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.Uint64Values.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.Uint64Values.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.Uint64Values} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Uint64Values.toObject = function(includeInstance, msg) {
  var f, obj = {
uint64ValuesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.Uint64Values}
 */
proto.api.common.proto.Uint64Values.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.Uint64Values;
  return proto.api.common.proto.Uint64Values.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.Uint64Values} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.Uint64Values}
 */
proto.api.common.proto.Uint64Values.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUint64Values(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.Uint64Values.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.Uint64Values.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.Uint64Values} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.Uint64Values.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUint64ValuesList();
  if (f.length > 0) {
    writer.writePackedUint64(
      11,
      f
    );
  }
};


/**
 * repeated uint64 uint64_values = 11;
 * @return {!Array<number>}
 */
proto.api.common.proto.Uint64Values.prototype.getUint64ValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.common.proto.Uint64Values} returns this
 */
proto.api.common.proto.Uint64Values.prototype.setUint64ValuesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.common.proto.Uint64Values} returns this
 */
proto.api.common.proto.Uint64Values.prototype.addUint64Values = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.common.proto.Uint64Values} returns this
 */
proto.api.common.proto.Uint64Values.prototype.clearUint64ValuesList = function() {
  return this.setUint64ValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.common.proto.FloatList.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.FloatList.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.FloatList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.FloatList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.FloatList.toObject = function(includeInstance, msg) {
  var f, obj = {
floatValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.FloatList}
 */
proto.api.common.proto.FloatList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.FloatList;
  return proto.api.common.proto.FloatList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.FloatList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.FloatList}
 */
proto.api.common.proto.FloatList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFloatValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.FloatList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.FloatList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.FloatList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.FloatList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFloatValuesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      12,
      f
    );
  }
};


/**
 * repeated float float_values = 12;
 * @return {!Array<number>}
 */
proto.api.common.proto.FloatList.prototype.getFloatValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.common.proto.FloatList} returns this
 */
proto.api.common.proto.FloatList.prototype.setFloatValuesList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.common.proto.FloatList} returns this
 */
proto.api.common.proto.FloatList.prototype.addFloatValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.common.proto.FloatList} returns this
 */
proto.api.common.proto.FloatList.prototype.clearFloatValuesList = function() {
  return this.setFloatValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.common.proto.DoubleList.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.DoubleList.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.DoubleList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.DoubleList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.DoubleList.toObject = function(includeInstance, msg) {
  var f, obj = {
doubleValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.DoubleList}
 */
proto.api.common.proto.DoubleList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.DoubleList;
  return proto.api.common.proto.DoubleList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.DoubleList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.DoubleList}
 */
proto.api.common.proto.DoubleList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 13:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDoubleValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.DoubleList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.DoubleList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.DoubleList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.DoubleList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDoubleValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      13,
      f
    );
  }
};


/**
 * repeated double double_values = 13;
 * @return {!Array<number>}
 */
proto.api.common.proto.DoubleList.prototype.getDoubleValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.common.proto.DoubleList} returns this
 */
proto.api.common.proto.DoubleList.prototype.setDoubleValuesList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.common.proto.DoubleList} returns this
 */
proto.api.common.proto.DoubleList.prototype.addDoubleValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.common.proto.DoubleList} returns this
 */
proto.api.common.proto.DoubleList.prototype.clearDoubleValuesList = function() {
  return this.setDoubleValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.common.proto.BytesList.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.common.proto.BytesList.prototype.toObject = function(opt_includeInstance) {
  return proto.api.common.proto.BytesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.common.proto.BytesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.BytesList.toObject = function(includeInstance, msg) {
  var f, obj = {
bytesValuesList: msg.getBytesValuesList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.common.proto.BytesList}
 */
proto.api.common.proto.BytesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.common.proto.BytesList;
  return proto.api.common.proto.BytesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.common.proto.BytesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.common.proto.BytesList}
 */
proto.api.common.proto.BytesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addBytesValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.common.proto.BytesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.common.proto.BytesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.common.proto.BytesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.common.proto.BytesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBytesValuesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      14,
      f
    );
  }
};


/**
 * repeated bytes bytes_values = 14;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.api.common.proto.BytesList.prototype.getBytesValuesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * repeated bytes bytes_values = 14;
 * This is a type-conversion wrapper around `getBytesValuesList()`
 * @return {!Array<string>}
 */
proto.api.common.proto.BytesList.prototype.getBytesValuesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getBytesValuesList()));
};


/**
 * repeated bytes bytes_values = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesValuesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.api.common.proto.BytesList.prototype.getBytesValuesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getBytesValuesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.api.common.proto.BytesList} returns this
 */
proto.api.common.proto.BytesList.prototype.setBytesValuesList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.api.common.proto.BytesList} returns this
 */
proto.api.common.proto.BytesList.prototype.addBytesValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.common.proto.BytesList} returns this
 */
proto.api.common.proto.BytesList.prototype.clearBytesValuesList = function() {
  return this.setBytesValuesList([]);
};


