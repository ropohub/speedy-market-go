// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/orderservice/order_service.proto" (package "api.common.proto.orderservice", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ResponseHeader } from "../header";
/**
 * @generated from protobuf message api.common.proto.orderservice.PlaceOrderRequest
 */
export interface PlaceOrderRequest {
    /**
     * @generated from protobuf field: repeated api.common.proto.orderservice.ProductVariantWithQuantity product_variants_with_quantity = 1
     */
    productVariantsWithQuantity: ProductVariantWithQuantity[];
    /**
     * @generated from protobuf field: int64 customer_address_link_id = 2
     */
    customerAddressLinkId: bigint;
}
/**
 * @generated from protobuf message api.common.proto.orderservice.PlaceOrderResponse
 */
export interface PlaceOrderResponse {
    /**
     * @generated from protobuf field: api.common.proto.ResponseHeader header = 1
     */
    header?: ResponseHeader;
    /**
     * @generated from protobuf field: string order_number = 2
     */
    orderNumber: string;
    /**
     * @generated from protobuf field: string razorpay_order_id = 3
     */
    razorpayOrderId: string;
    /**
     * @generated from protobuf field: int64 amount_micros = 4
     */
    amountMicros: bigint;
}
/**
 * @generated from protobuf message api.common.proto.orderservice.ProductVariantWithQuantity
 */
export interface ProductVariantWithQuantity {
    /**
     * @generated from protobuf field: int64 product_variant_id = 1
     */
    productVariantId: bigint;
    /**
     * @generated from protobuf field: int32 quantity = 2
     */
    quantity: number;
}
/**
 * @generated from protobuf message api.common.proto.orderservice.ConfirmPaymentRequest
 */
export interface ConfirmPaymentRequest {
    /**
     * @generated from protobuf field: string razorpay_order_id = 1
     */
    razorpayOrderId: string;
    /**
     * @generated from protobuf field: string razorpay_payment_id = 2
     */
    razorpayPaymentId: string;
    /**
     * @generated from protobuf field: string razorpay_signature = 3
     */
    razorpaySignature: string;
}
/**
 * @generated from protobuf message api.common.proto.orderservice.ConfirmPaymentResponse
 */
export interface ConfirmPaymentResponse {
    /**
     * @generated from protobuf field: api.common.proto.ResponseHeader header = 1
     */
    header?: ResponseHeader;
    /**
     * @generated from protobuf field: bool success = 2
     */
    success: boolean;
    /**
     * @generated from protobuf field: string order_number = 3
     */
    orderNumber: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class PlaceOrderRequest$Type extends MessageType<PlaceOrderRequest> {
    constructor() {
        super("api.common.proto.orderservice.PlaceOrderRequest", [
            { no: 1, name: "product_variants_with_quantity", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ProductVariantWithQuantity },
            { no: 2, name: "customer_address_link_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<PlaceOrderRequest>): PlaceOrderRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.productVariantsWithQuantity = [];
        message.customerAddressLinkId = 0n;
        if (value !== undefined)
            reflectionMergePartial<PlaceOrderRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlaceOrderRequest): PlaceOrderRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated api.common.proto.orderservice.ProductVariantWithQuantity product_variants_with_quantity */ 1:
                    message.productVariantsWithQuantity.push(ProductVariantWithQuantity.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 customer_address_link_id */ 2:
                    message.customerAddressLinkId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlaceOrderRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated api.common.proto.orderservice.ProductVariantWithQuantity product_variants_with_quantity = 1; */
        for (let i = 0; i < message.productVariantsWithQuantity.length; i++)
            ProductVariantWithQuantity.internalBinaryWrite(message.productVariantsWithQuantity[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 customer_address_link_id = 2; */
        if (message.customerAddressLinkId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.customerAddressLinkId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.orderservice.PlaceOrderRequest
 */
export const PlaceOrderRequest = new PlaceOrderRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlaceOrderResponse$Type extends MessageType<PlaceOrderResponse> {
    constructor() {
        super("api.common.proto.orderservice.PlaceOrderResponse", [
            { no: 1, name: "header", kind: "message", T: () => ResponseHeader },
            { no: 2, name: "order_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "razorpay_order_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<PlaceOrderResponse>): PlaceOrderResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.orderNumber = "";
        message.razorpayOrderId = "";
        message.amountMicros = 0n;
        if (value !== undefined)
            reflectionMergePartial<PlaceOrderResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlaceOrderResponse): PlaceOrderResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.ResponseHeader header */ 1:
                    message.header = ResponseHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* string order_number */ 2:
                    message.orderNumber = reader.string();
                    break;
                case /* string razorpay_order_id */ 3:
                    message.razorpayOrderId = reader.string();
                    break;
                case /* int64 amount_micros */ 4:
                    message.amountMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlaceOrderResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.ResponseHeader header = 1; */
        if (message.header)
            ResponseHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string order_number = 2; */
        if (message.orderNumber !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.orderNumber);
        /* string razorpay_order_id = 3; */
        if (message.razorpayOrderId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.razorpayOrderId);
        /* int64 amount_micros = 4; */
        if (message.amountMicros !== 0n)
            writer.tag(4, WireType.Varint).int64(message.amountMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.orderservice.PlaceOrderResponse
 */
export const PlaceOrderResponse = new PlaceOrderResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProductVariantWithQuantity$Type extends MessageType<ProductVariantWithQuantity> {
    constructor() {
        super("api.common.proto.orderservice.ProductVariantWithQuantity", [
            { no: 1, name: "product_variant_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "quantity", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ProductVariantWithQuantity>): ProductVariantWithQuantity {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.productVariantId = 0n;
        message.quantity = 0;
        if (value !== undefined)
            reflectionMergePartial<ProductVariantWithQuantity>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProductVariantWithQuantity): ProductVariantWithQuantity {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 product_variant_id */ 1:
                    message.productVariantId = reader.int64().toBigInt();
                    break;
                case /* int32 quantity */ 2:
                    message.quantity = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProductVariantWithQuantity, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 product_variant_id = 1; */
        if (message.productVariantId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.productVariantId);
        /* int32 quantity = 2; */
        if (message.quantity !== 0)
            writer.tag(2, WireType.Varint).int32(message.quantity);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.orderservice.ProductVariantWithQuantity
 */
export const ProductVariantWithQuantity = new ProductVariantWithQuantity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfirmPaymentRequest$Type extends MessageType<ConfirmPaymentRequest> {
    constructor() {
        super("api.common.proto.orderservice.ConfirmPaymentRequest", [
            { no: 1, name: "razorpay_order_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "razorpay_payment_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "razorpay_signature", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ConfirmPaymentRequest>): ConfirmPaymentRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.razorpayOrderId = "";
        message.razorpayPaymentId = "";
        message.razorpaySignature = "";
        if (value !== undefined)
            reflectionMergePartial<ConfirmPaymentRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConfirmPaymentRequest): ConfirmPaymentRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string razorpay_order_id */ 1:
                    message.razorpayOrderId = reader.string();
                    break;
                case /* string razorpay_payment_id */ 2:
                    message.razorpayPaymentId = reader.string();
                    break;
                case /* string razorpay_signature */ 3:
                    message.razorpaySignature = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ConfirmPaymentRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string razorpay_order_id = 1; */
        if (message.razorpayOrderId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.razorpayOrderId);
        /* string razorpay_payment_id = 2; */
        if (message.razorpayPaymentId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.razorpayPaymentId);
        /* string razorpay_signature = 3; */
        if (message.razorpaySignature !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.razorpaySignature);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.orderservice.ConfirmPaymentRequest
 */
export const ConfirmPaymentRequest = new ConfirmPaymentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfirmPaymentResponse$Type extends MessageType<ConfirmPaymentResponse> {
    constructor() {
        super("api.common.proto.orderservice.ConfirmPaymentResponse", [
            { no: 1, name: "header", kind: "message", T: () => ResponseHeader },
            { no: 2, name: "success", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "order_number", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ConfirmPaymentResponse>): ConfirmPaymentResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.success = false;
        message.orderNumber = "";
        if (value !== undefined)
            reflectionMergePartial<ConfirmPaymentResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConfirmPaymentResponse): ConfirmPaymentResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.ResponseHeader header */ 1:
                    message.header = ResponseHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* bool success */ 2:
                    message.success = reader.bool();
                    break;
                case /* string order_number */ 3:
                    message.orderNumber = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ConfirmPaymentResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.ResponseHeader header = 1; */
        if (message.header)
            ResponseHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bool success = 2; */
        if (message.success !== false)
            writer.tag(2, WireType.Varint).bool(message.success);
        /* string order_number = 3; */
        if (message.orderNumber !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.orderNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.orderservice.ConfirmPaymentResponse
 */
export const ConfirmPaymentResponse = new ConfirmPaymentResponse$Type();
/**
 * @generated ServiceType for protobuf service api.common.proto.orderservice.OrderService
 */
export const OrderService = new ServiceType("api.common.proto.orderservice.OrderService", [
    { name: "PlaceOrder", options: {}, I: PlaceOrderRequest, O: PlaceOrderResponse },
    { name: "ConfirmPayment", options: {}, I: ConfirmPaymentRequest, O: ConfirmPaymentResponse }
]);
