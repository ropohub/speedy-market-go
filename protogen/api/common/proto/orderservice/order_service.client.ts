// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/orderservice/order_service.proto" (package "api.common.proto.orderservice", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { OrderService } from "./order_service";
import type { ConfirmPaymentResponse } from "./order_service";
import type { ConfirmPaymentRequest } from "./order_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PlaceOrderResponse } from "./order_service";
import type { PlaceOrderRequest } from "./order_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service api.common.proto.orderservice.OrderService
 */
export interface IOrderServiceClient {
    /**
     * @generated from protobuf rpc: PlaceOrder
     */
    placeOrder(input: PlaceOrderRequest, options?: RpcOptions): UnaryCall<PlaceOrderRequest, PlaceOrderResponse>;
    /**
     * @generated from protobuf rpc: ConfirmPayment
     */
    confirmPayment(input: ConfirmPaymentRequest, options?: RpcOptions): UnaryCall<ConfirmPaymentRequest, ConfirmPaymentResponse>;
}
/**
 * @generated from protobuf service api.common.proto.orderservice.OrderService
 */
export class OrderServiceClient implements IOrderServiceClient, ServiceInfo {
    typeName = OrderService.typeName;
    methods = OrderService.methods;
    options = OrderService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: PlaceOrder
     */
    placeOrder(input: PlaceOrderRequest, options?: RpcOptions): UnaryCall<PlaceOrderRequest, PlaceOrderResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PlaceOrderRequest, PlaceOrderResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ConfirmPayment
     */
    confirmPayment(input: ConfirmPaymentRequest, options?: RpcOptions): UnaryCall<ConfirmPaymentRequest, ConfirmPaymentResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ConfirmPaymentRequest, ConfirmPaymentResponse>("unary", this._transport, method, opt, input);
    }
}
