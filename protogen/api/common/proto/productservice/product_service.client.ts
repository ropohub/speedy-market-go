// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/productservice/product_service.proto" (package "api.common.proto.productservice", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ProductService } from "./product_service";
import type { GetCategorySetResponse } from "./product_service";
import type { GetCategorySetRequest } from "./product_service";
import type { GetProductDetailsResponse } from "./product_service";
import type { GetProductDetailsRequest } from "./product_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetProductResponse } from "./product_service";
import type { GetProductRequest } from "./product_service";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * ProductService defines the service for handling product-related operations.
 *
 * @generated from protobuf service api.common.proto.productservice.ProductService
 */
export interface IProductServiceClient {
    /**
     * GetProduct retrieves a stream of products based on the provided request.
     *
     * @generated from protobuf rpc: GetProduct
     */
    getProduct(input: GetProductRequest, options?: RpcOptions): ServerStreamingCall<GetProductRequest, GetProductResponse>;
    /**
     * @generated from protobuf rpc: GetProductDetails
     */
    getProductDetails(input: GetProductDetailsRequest, options?: RpcOptions): UnaryCall<GetProductDetailsRequest, GetProductDetailsResponse>;
    /**
     * @generated from protobuf rpc: GetCategorySet
     */
    getCategorySet(input: GetCategorySetRequest, options?: RpcOptions): UnaryCall<GetCategorySetRequest, GetCategorySetResponse>;
}
/**
 * ProductService defines the service for handling product-related operations.
 *
 * @generated from protobuf service api.common.proto.productservice.ProductService
 */
export class ProductServiceClient implements IProductServiceClient, ServiceInfo {
    typeName = ProductService.typeName;
    methods = ProductService.methods;
    options = ProductService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * GetProduct retrieves a stream of products based on the provided request.
     *
     * @generated from protobuf rpc: GetProduct
     */
    getProduct(input: GetProductRequest, options?: RpcOptions): ServerStreamingCall<GetProductRequest, GetProductResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetProductRequest, GetProductResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetProductDetails
     */
    getProductDetails(input: GetProductDetailsRequest, options?: RpcOptions): UnaryCall<GetProductDetailsRequest, GetProductDetailsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetProductDetailsRequest, GetProductDetailsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetCategorySet
     */
    getCategorySet(input: GetCategorySetRequest, options?: RpcOptions): UnaryCall<GetCategorySetRequest, GetCategorySetResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetCategorySetRequest, GetCategorySetResponse>("unary", this._transport, method, opt, input);
    }
}
