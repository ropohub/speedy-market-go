// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "api/common/proto/productservice/product_service.proto" (package "api.common.proto.productservice", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Filter } from "../filter";
import { Product } from "../product";
import { ProductDetails } from "../product";
import { CategorySet } from "../category";
import { ResponseHeader } from "../header";
import { RequestHeader } from "../header";
/**
 * @generated from protobuf message api.common.proto.productservice.GetCategorySetRequest
 */
export interface GetCategorySetRequest {
    /**
     * @generated from protobuf field: api.common.proto.RequestHeader header = 1
     */
    header?: RequestHeader;
}
/**
 * @generated from protobuf message api.common.proto.productservice.GetCategorySetResponse
 */
export interface GetCategorySetResponse {
    /**
     * @generated from protobuf field: api.common.proto.ResponseHeader header = 1
     */
    header?: ResponseHeader;
    /**
     * @generated from protobuf field: api.common.proto.CategorySet category_set = 2
     */
    categorySet?: CategorySet;
}
/**
 * @generated from protobuf message api.common.proto.productservice.GetProductDetailsRequest
 */
export interface GetProductDetailsRequest {
    /**
     * @generated from protobuf field: api.common.proto.RequestHeader header = 1
     */
    header?: RequestHeader;
    /**
     * @generated from protobuf field: int64 product_id = 2
     */
    productId: bigint;
}
/**
 * @generated from protobuf message api.common.proto.productservice.GetProductDetailsResponse
 */
export interface GetProductDetailsResponse {
    /**
     * @generated from protobuf field: api.common.proto.ResponseHeader header = 1
     */
    header?: ResponseHeader;
    /**
     * @generated from protobuf field: api.common.proto.ProductDetails product_details = 2
     */
    productDetails?: ProductDetails;
}
/**
 * GetProductRequest represents the request message for retrieving products.
 *
 * @generated from protobuf message api.common.proto.productservice.GetProductRequest
 */
export interface GetProductRequest {
    /**
     * The request header containing metadata.
     *
     * @generated from protobuf field: api.common.proto.RequestHeader header = 1
     */
    header?: RequestHeader;
    /**
     * @generated from protobuf field: string search_query = 2
     */
    searchQuery: string;
    /**
     * The list of product selectors to filter the products.
     *
     * @generated from protobuf field: repeated api.common.proto.productservice.ProductSelector selectors = 3
     */
    selectors: ProductSelector[];
    /**
     * The list of order by criteria for sorting the products.
     *
     * @generated from protobuf field: repeated api.common.proto.productservice.GetProductRequest.OrderBy order_by = 4
     */
    orderBy: GetProductRequest_OrderBy[];
}
/**
 * OrderBy specifies the field and order for sorting the products.
 *
 * @generated from protobuf message api.common.proto.productservice.GetProductRequest.OrderBy
 */
export interface GetProductRequest_OrderBy {
    /**
     * The field to sort by.
     *
     * @generated from protobuf field: api.common.proto.productservice.Field.Enum selector = 1
     */
    selector: Field_Enum;
    /**
     * Whether to sort in descending order.
     *
     * @generated from protobuf field: bool descending = 2
     */
    descending: boolean;
}
/**
 * GetProductResponse represents the response message containing the products.
 *
 * @generated from protobuf message api.common.proto.productservice.GetProductResponse
 */
export interface GetProductResponse {
    /**
     * The response header containing metadata.
     *
     * @generated from protobuf field: api.common.proto.ResponseHeader header = 1
     */
    header?: ResponseHeader;
    /**
     * The list of products retrieved.
     *
     * @generated from protobuf field: repeated api.common.proto.Product products = 2
     */
    products: Product[];
}
/**
 * ProductSelector specifies the criteria for selecting products.
 *
 * @generated from protobuf message api.common.proto.productservice.ProductSelector
 */
export interface ProductSelector {
    /**
     * The field to filter by.
     *
     * @generated from protobuf field: api.common.proto.productservice.Field.Enum field = 1
     */
    field: Field_Enum;
    /**
     * The filter criteria for the selected field.
     *
     * @generated from protobuf field: api.common.proto.Filter filter = 2
     */
    filter?: Filter;
}
/**
 * Field defines the various fields that can be used for filtering and sorting.
 *
 * @generated from protobuf message api.common.proto.productservice.Field
 */
export interface Field {
}
/**
 * @generated from protobuf enum api.common.proto.productservice.Field.Enum
 */
export enum Field_Enum {
    /**
     * Unknown field.
     *
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * Field for product key.
     *
     * @generated from protobuf enum value: PRODUCT_KEY = 1;
     */
    PRODUCT_KEY = 1,
    /**
     * Field for brand key.
     *
     * @generated from protobuf enum value: BRAND_KEY = 2;
     */
    BRAND_KEY = 2,
    /**
     * Field for store key.
     *
     * @generated from protobuf enum value: STORE_KEY = 3;
     */
    STORE_KEY = 3,
    /**
     * @generated from protobuf enum value: PRODUCT_VARIANT_KEY = 4;
     */
    PRODUCT_VARIANT_KEY = 4,
    /**
     * Field for gender.
     *
     * @generated from protobuf enum value: GENDER = 5;
     */
    GENDER = 5,
    /**
     * Field for category.
     *
     * @generated from protobuf enum value: CATEGORY = 6;
     */
    CATEGORY = 6,
    /**
     * Field for rating.
     *
     * @generated from protobuf enum value: RATING = 7;
     */
    RATING = 7,
    /**
     * Field for discount price in micros.
     *
     * @generated from protobuf enum value: DISCOUNT_PRICE_MICROS = 8;
     */
    DISCOUNT_PRICE_MICROS = 8,
    /**
     * Field for discount percentage.
     *
     * @generated from protobuf enum value: DISCOUNT_PERCENTAGE = 9;
     */
    DISCOUNT_PERCENTAGE = 9,
    /**
     * Field for distance.
     *
     * @generated from protobuf enum value: DISTANCE = 10;
     */
    DISTANCE = 10,
    /**
     * Field for offer.
     *
     * @generated from protobuf enum value: OFFER = 11;
     */
    OFFER = 11,
    /**
     * @generated from protobuf enum value: FROM_DELIVERY_PARTNERS = 12;
     */
    FROM_DELIVERY_PARTNERS = 12,
    /**
     * @generated from protobuf enum value: CATEGORY_ID = 13;
     */
    CATEGORY_ID = 13
}
// @generated message type with reflection information, may provide speed optimized methods
class GetCategorySetRequest$Type extends MessageType<GetCategorySetRequest> {
    constructor() {
        super("api.common.proto.productservice.GetCategorySetRequest", [
            { no: 1, name: "header", kind: "message", T: () => RequestHeader }
        ]);
    }
    create(value?: PartialMessage<GetCategorySetRequest>): GetCategorySetRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetCategorySetRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetCategorySetRequest): GetCategorySetRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.RequestHeader header */ 1:
                    message.header = RequestHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetCategorySetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.RequestHeader header = 1; */
        if (message.header)
            RequestHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.GetCategorySetRequest
 */
export const GetCategorySetRequest = new GetCategorySetRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCategorySetResponse$Type extends MessageType<GetCategorySetResponse> {
    constructor() {
        super("api.common.proto.productservice.GetCategorySetResponse", [
            { no: 1, name: "header", kind: "message", T: () => ResponseHeader },
            { no: 2, name: "category_set", kind: "message", T: () => CategorySet }
        ]);
    }
    create(value?: PartialMessage<GetCategorySetResponse>): GetCategorySetResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetCategorySetResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetCategorySetResponse): GetCategorySetResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.ResponseHeader header */ 1:
                    message.header = ResponseHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* api.common.proto.CategorySet category_set */ 2:
                    message.categorySet = CategorySet.internalBinaryRead(reader, reader.uint32(), options, message.categorySet);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetCategorySetResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.ResponseHeader header = 1; */
        if (message.header)
            ResponseHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.CategorySet category_set = 2; */
        if (message.categorySet)
            CategorySet.internalBinaryWrite(message.categorySet, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.GetCategorySetResponse
 */
export const GetCategorySetResponse = new GetCategorySetResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetProductDetailsRequest$Type extends MessageType<GetProductDetailsRequest> {
    constructor() {
        super("api.common.proto.productservice.GetProductDetailsRequest", [
            { no: 1, name: "header", kind: "message", T: () => RequestHeader },
            { no: 2, name: "product_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<GetProductDetailsRequest>): GetProductDetailsRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.productId = 0n;
        if (value !== undefined)
            reflectionMergePartial<GetProductDetailsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetProductDetailsRequest): GetProductDetailsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.RequestHeader header */ 1:
                    message.header = RequestHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* int64 product_id */ 2:
                    message.productId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetProductDetailsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.RequestHeader header = 1; */
        if (message.header)
            RequestHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 product_id = 2; */
        if (message.productId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.productId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.GetProductDetailsRequest
 */
export const GetProductDetailsRequest = new GetProductDetailsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetProductDetailsResponse$Type extends MessageType<GetProductDetailsResponse> {
    constructor() {
        super("api.common.proto.productservice.GetProductDetailsResponse", [
            { no: 1, name: "header", kind: "message", T: () => ResponseHeader },
            { no: 2, name: "product_details", kind: "message", T: () => ProductDetails }
        ]);
    }
    create(value?: PartialMessage<GetProductDetailsResponse>): GetProductDetailsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GetProductDetailsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetProductDetailsResponse): GetProductDetailsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.ResponseHeader header */ 1:
                    message.header = ResponseHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* api.common.proto.ProductDetails product_details */ 2:
                    message.productDetails = ProductDetails.internalBinaryRead(reader, reader.uint32(), options, message.productDetails);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetProductDetailsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.ResponseHeader header = 1; */
        if (message.header)
            ResponseHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* api.common.proto.ProductDetails product_details = 2; */
        if (message.productDetails)
            ProductDetails.internalBinaryWrite(message.productDetails, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.GetProductDetailsResponse
 */
export const GetProductDetailsResponse = new GetProductDetailsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetProductRequest$Type extends MessageType<GetProductRequest> {
    constructor() {
        super("api.common.proto.productservice.GetProductRequest", [
            { no: 1, name: "header", kind: "message", T: () => RequestHeader },
            { no: 2, name: "search_query", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "selectors", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ProductSelector },
            { no: 4, name: "order_by", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GetProductRequest_OrderBy }
        ]);
    }
    create(value?: PartialMessage<GetProductRequest>): GetProductRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.searchQuery = "";
        message.selectors = [];
        message.orderBy = [];
        if (value !== undefined)
            reflectionMergePartial<GetProductRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetProductRequest): GetProductRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.RequestHeader header */ 1:
                    message.header = RequestHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* string search_query */ 2:
                    message.searchQuery = reader.string();
                    break;
                case /* repeated api.common.proto.productservice.ProductSelector selectors */ 3:
                    message.selectors.push(ProductSelector.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated api.common.proto.productservice.GetProductRequest.OrderBy order_by */ 4:
                    message.orderBy.push(GetProductRequest_OrderBy.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetProductRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.RequestHeader header = 1; */
        if (message.header)
            RequestHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string search_query = 2; */
        if (message.searchQuery !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.searchQuery);
        /* repeated api.common.proto.productservice.ProductSelector selectors = 3; */
        for (let i = 0; i < message.selectors.length; i++)
            ProductSelector.internalBinaryWrite(message.selectors[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated api.common.proto.productservice.GetProductRequest.OrderBy order_by = 4; */
        for (let i = 0; i < message.orderBy.length; i++)
            GetProductRequest_OrderBy.internalBinaryWrite(message.orderBy[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.GetProductRequest
 */
export const GetProductRequest = new GetProductRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetProductRequest_OrderBy$Type extends MessageType<GetProductRequest_OrderBy> {
    constructor() {
        super("api.common.proto.productservice.GetProductRequest.OrderBy", [
            { no: 1, name: "selector", kind: "enum", T: () => ["api.common.proto.productservice.Field.Enum", Field_Enum] },
            { no: 2, name: "descending", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetProductRequest_OrderBy>): GetProductRequest_OrderBy {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.selector = 0;
        message.descending = false;
        if (value !== undefined)
            reflectionMergePartial<GetProductRequest_OrderBy>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetProductRequest_OrderBy): GetProductRequest_OrderBy {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.productservice.Field.Enum selector */ 1:
                    message.selector = reader.int32();
                    break;
                case /* bool descending */ 2:
                    message.descending = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetProductRequest_OrderBy, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.productservice.Field.Enum selector = 1; */
        if (message.selector !== 0)
            writer.tag(1, WireType.Varint).int32(message.selector);
        /* bool descending = 2; */
        if (message.descending !== false)
            writer.tag(2, WireType.Varint).bool(message.descending);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.GetProductRequest.OrderBy
 */
export const GetProductRequest_OrderBy = new GetProductRequest_OrderBy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetProductResponse$Type extends MessageType<GetProductResponse> {
    constructor() {
        super("api.common.proto.productservice.GetProductResponse", [
            { no: 1, name: "header", kind: "message", T: () => ResponseHeader },
            { no: 2, name: "products", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => Product }
        ]);
    }
    create(value?: PartialMessage<GetProductResponse>): GetProductResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.products = [];
        if (value !== undefined)
            reflectionMergePartial<GetProductResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetProductResponse): GetProductResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.ResponseHeader header */ 1:
                    message.header = ResponseHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* repeated api.common.proto.Product products */ 2:
                    message.products.push(Product.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetProductResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.ResponseHeader header = 1; */
        if (message.header)
            ResponseHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated api.common.proto.Product products = 2; */
        for (let i = 0; i < message.products.length; i++)
            Product.internalBinaryWrite(message.products[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.GetProductResponse
 */
export const GetProductResponse = new GetProductResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProductSelector$Type extends MessageType<ProductSelector> {
    constructor() {
        super("api.common.proto.productservice.ProductSelector", [
            { no: 1, name: "field", kind: "enum", T: () => ["api.common.proto.productservice.Field.Enum", Field_Enum] },
            { no: 2, name: "filter", kind: "message", T: () => Filter }
        ]);
    }
    create(value?: PartialMessage<ProductSelector>): ProductSelector {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.field = 0;
        if (value !== undefined)
            reflectionMergePartial<ProductSelector>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProductSelector): ProductSelector {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* api.common.proto.productservice.Field.Enum field */ 1:
                    message.field = reader.int32();
                    break;
                case /* api.common.proto.Filter filter */ 2:
                    message.filter = Filter.internalBinaryRead(reader, reader.uint32(), options, message.filter);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProductSelector, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* api.common.proto.productservice.Field.Enum field = 1; */
        if (message.field !== 0)
            writer.tag(1, WireType.Varint).int32(message.field);
        /* api.common.proto.Filter filter = 2; */
        if (message.filter)
            Filter.internalBinaryWrite(message.filter, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.ProductSelector
 */
export const ProductSelector = new ProductSelector$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Field$Type extends MessageType<Field> {
    constructor() {
        super("api.common.proto.productservice.Field", []);
    }
    create(value?: PartialMessage<Field>): Field {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Field>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Field): Field {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Field, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message api.common.proto.productservice.Field
 */
export const Field = new Field$Type();
/**
 * @generated ServiceType for protobuf service api.common.proto.productservice.ProductService
 */
export const ProductService = new ServiceType("api.common.proto.productservice.ProductService", [
    { name: "GetProduct", serverStreaming: true, options: {}, I: GetProductRequest, O: GetProductResponse },
    { name: "GetProductDetails", options: {}, I: GetProductDetailsRequest, O: GetProductDetailsResponse },
    { name: "GetCategorySet", options: {}, I: GetCategorySetRequest, O: GetCategorySetResponse }
]);
